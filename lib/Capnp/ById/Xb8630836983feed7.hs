{-# OPTIONS_GHC -Wno-unused-imports #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE KindSignatures #-}
module Capnp.ById.Xb8630836983feed7 where

-- Code generated by capnpc-haskell. DO NOT EDIT.
-- Generated from schema file: capnp/persistent.capnp

import Data.Int
import Data.Word
import qualified Data.Bits
import qualified Data.Maybe
import qualified Codec.Capnp
import qualified Data.Capnp.BuiltinTypes
import qualified Data.Capnp.TraversalLimit
import qualified Data.Capnp.Untyped

import qualified Capnp.ById.Xbdf87d7bb8304e81

newtype Persistent'SaveResults (m :: * -> *) = Persistent'SaveResults (Data.Capnp.Untyped.Struct m)

instance Data.Capnp.Untyped.ReadCtx m => Codec.Capnp.IsStruct m (Persistent'SaveResults m) where
    fromStruct = pure . Persistent'SaveResults
instance Data.Capnp.Untyped.ReadCtx m => Codec.Capnp.IsPtr m (Persistent'SaveResults m) where
    fromPtr = Codec.Capnp.structPtr

instance Data.Capnp.Untyped.ReadCtx m => Codec.Capnp.IsPtr m (Data.Capnp.Untyped.ListOf m (Persistent'SaveResults m)) where
    fromPtr = Codec.Capnp.structListPtr
get_Persistent'SaveResults'sturdyRef :: Data.Capnp.Untyped.ReadCtx m => Persistent'SaveResults m -> m (Maybe (Data.Capnp.Untyped.Ptr m))
get_Persistent'SaveResults'sturdyRef (Persistent'SaveResults struct) =
    Data.Capnp.Untyped.getPtr 0 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)


has_Persistent'SaveResults'sturdyRef :: Data.Capnp.Untyped.ReadCtx m => Persistent'SaveResults m -> m Bool
has_Persistent'SaveResults'sturdyRef(Persistent'SaveResults struct) = Data.Maybe.isJust <$> Data.Capnp.Untyped.getPtr 0 struct
newtype Persistent'SaveParams (m :: * -> *) = Persistent'SaveParams (Data.Capnp.Untyped.Struct m)

instance Data.Capnp.Untyped.ReadCtx m => Codec.Capnp.IsStruct m (Persistent'SaveParams m) where
    fromStruct = pure . Persistent'SaveParams
instance Data.Capnp.Untyped.ReadCtx m => Codec.Capnp.IsPtr m (Persistent'SaveParams m) where
    fromPtr = Codec.Capnp.structPtr

instance Data.Capnp.Untyped.ReadCtx m => Codec.Capnp.IsPtr m (Data.Capnp.Untyped.ListOf m (Persistent'SaveParams m)) where
    fromPtr = Codec.Capnp.structListPtr
get_Persistent'SaveParams'sealFor :: Data.Capnp.Untyped.ReadCtx m => Persistent'SaveParams m -> m (Maybe (Data.Capnp.Untyped.Ptr m))
get_Persistent'SaveParams'sealFor (Persistent'SaveParams struct) =
    Data.Capnp.Untyped.getPtr 0 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)


has_Persistent'SaveParams'sealFor :: Data.Capnp.Untyped.ReadCtx m => Persistent'SaveParams m -> m Bool
has_Persistent'SaveParams'sealFor(Persistent'SaveParams struct) = Data.Maybe.isJust <$> Data.Capnp.Untyped.getPtr 0 struct