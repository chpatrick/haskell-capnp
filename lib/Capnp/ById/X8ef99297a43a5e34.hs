{-# OPTIONS_GHC -Wno-unused-imports #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MultiParamTypeClasses #-}
module Capnp.ById.X8ef99297a43a5e34 where

-- Code generated by capnpc-haskell. DO NOT EDIT.
-- Generated from schema file: capnp/json.capnp

import Data.Int
import Data.Word
import qualified Data.Bits
import qualified Data.Maybe
import qualified Codec.Capnp
import qualified Data.Capnp.BuiltinTypes
import qualified Data.Capnp.TraversalLimit
import qualified Data.Capnp.Untyped

import qualified Capnp.ById.Xbdf87d7bb8304e81

data JsonValue
    = JsonValue'null
    | JsonValue'boolean Bool
    | JsonValue'number Double
    | JsonValue'string Data.Capnp.BuiltinTypes.Text
    | JsonValue'array (Data.Capnp.Untyped.ListOf (JsonValue ))
    | JsonValue'object (Data.Capnp.Untyped.ListOf (JsonValue'Field ))
    | JsonValue'call (JsonValue'Call )
    | JsonValue'unknown' Word16








instance Codec.Capnp.IsStruct JsonValue where
    fromStruct struct = do
        tag <-  Codec.Capnp.getWordField struct 0 0 0
        case tag of
            6 -> JsonValue'call <$>  (Data.Capnp.Untyped.getPtr 0 struct >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct))
            5 -> JsonValue'object <$>  (Data.Capnp.Untyped.getPtr 0 struct >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct))
            4 -> JsonValue'array <$>  (Data.Capnp.Untyped.getPtr 0 struct >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct))
            3 -> JsonValue'string <$>  (Data.Capnp.Untyped.getPtr 0 struct >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct))
            2 -> JsonValue'number <$>  Codec.Capnp.getWordField struct 1 0 0
            1 -> JsonValue'boolean <$>  Codec.Capnp.getWordField struct 0 16 0
            0 -> pure JsonValue'null
            _ -> pure $ JsonValue'unknown' tag

instance Codec.Capnp.IsPtr JsonValue where
    fromPtr = Codec.Capnp.structPtr
instance Codec.Capnp.IsPtr (Data.Capnp.Untyped.ListOf JsonValue) where
    fromPtr = Codec.Capnp.structListPtr

newtype JsonValue'Call = JsonValue'Call Data.Capnp.Untyped.Struct

instance Codec.Capnp.IsStruct JsonValue'Call where
    fromStruct = pure . JsonValue'Call
instance Codec.Capnp.IsPtr JsonValue'Call where
    fromPtr = Codec.Capnp.structPtr

instance Codec.Capnp.IsPtr (Data.Capnp.Untyped.ListOf JsonValue'Call) where
    fromPtr = Codec.Capnp.structListPtr
get_JsonValue'Call'function :: Data.Capnp.Untyped.ReadCtx m => JsonValue'Call -> m Data.Capnp.BuiltinTypes.Text
get_JsonValue'Call'function (JsonValue'Call struct) =
    Data.Capnp.Untyped.getPtr 0 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)


has_JsonValue'Call'function :: Data.Capnp.Untyped.ReadCtx m => JsonValue'Call -> m Bool
has_JsonValue'Call'function(JsonValue'Call struct) = Data.Maybe.isJust <$> Data.Capnp.Untyped.getPtr 0 struct
get_JsonValue'Call'params :: Data.Capnp.Untyped.ReadCtx m => JsonValue'Call -> m (Data.Capnp.Untyped.ListOf (JsonValue ))
get_JsonValue'Call'params (JsonValue'Call struct) =
    Data.Capnp.Untyped.getPtr 1 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)


has_JsonValue'Call'params :: Data.Capnp.Untyped.ReadCtx m => JsonValue'Call -> m Bool
has_JsonValue'Call'params(JsonValue'Call struct) = Data.Maybe.isJust <$> Data.Capnp.Untyped.getPtr 1 struct
newtype JsonValue'Field = JsonValue'Field Data.Capnp.Untyped.Struct

instance Codec.Capnp.IsStruct JsonValue'Field where
    fromStruct = pure . JsonValue'Field
instance Codec.Capnp.IsPtr JsonValue'Field where
    fromPtr = Codec.Capnp.structPtr

instance Codec.Capnp.IsPtr (Data.Capnp.Untyped.ListOf JsonValue'Field) where
    fromPtr = Codec.Capnp.structListPtr
get_JsonValue'Field'name :: Data.Capnp.Untyped.ReadCtx m => JsonValue'Field -> m Data.Capnp.BuiltinTypes.Text
get_JsonValue'Field'name (JsonValue'Field struct) =
    Data.Capnp.Untyped.getPtr 0 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)


has_JsonValue'Field'name :: Data.Capnp.Untyped.ReadCtx m => JsonValue'Field -> m Bool
has_JsonValue'Field'name(JsonValue'Field struct) = Data.Maybe.isJust <$> Data.Capnp.Untyped.getPtr 0 struct
get_JsonValue'Field'value :: Data.Capnp.Untyped.ReadCtx m => JsonValue'Field -> m (JsonValue )
get_JsonValue'Field'value (JsonValue'Field struct) =
    Data.Capnp.Untyped.getPtr 1 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)


has_JsonValue'Field'value :: Data.Capnp.Untyped.ReadCtx m => JsonValue'Field -> m Bool
has_JsonValue'Field'value(JsonValue'Field struct) = Data.Maybe.isJust <$> Data.Capnp.Untyped.getPtr 1 struct