{-# OPTIONS_GHC -Wno-unused-imports #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE TypeFamilies #-}
module Capnp.Capnp.Rpc where

-- Code generated by capnpc-haskell. DO NOT EDIT.
-- Generated from schema file: capnp/rpc.capnp

import Data.Int
import Data.Word
import qualified Data.Bits
import qualified Data.Maybe
import qualified Codec.Capnp
import qualified Data.Capnp.BuiltinTypes
import qualified Data.Capnp.BuiltinTypes.Generic
import qualified Data.Capnp.TraversalLimit
import qualified Data.Capnp.Untyped
import qualified Data.Capnp.Message.Mutable

import qualified Capnp.ById.Xbdf87d7bb8304e81

newtype Call msg = Call Data.Capnp.Untyped.Struct

instance Codec.Capnp.IsStruct (Call msg) where
    fromStruct = pure . Call
instance Codec.Capnp.IsPtr (Call msg) where
    fromPtr = Codec.Capnp.structPtr
instance Data.Capnp.BuiltinTypes.Generic.ListElem msg (Call msg) where
    newtype List msg (Call msg) = List_Call (Data.Capnp.Untyped.ListOf Data.Capnp.Untyped.Struct)
    length (List_Call l) = Data.Capnp.Untyped.length l
    index i (List_Call l) = Call <$> Data.Capnp.Untyped.index i l
instance Data.Capnp.BuiltinTypes.Generic.MutListElem s (Call (Data.Capnp.Message.Mutable.Message s)) where
    setIndex (Call elt) i (List_Call l) = error "TODO: Generate code for setIndex"

instance Codec.Capnp.IsPtr (Data.Capnp.Untyped.ListOf (Call msg)) where
    fromPtr = Codec.Capnp.structListPtr
get_Call'questionId :: Data.Capnp.Untyped.ReadCtx m => Call msg -> m Word32
get_Call'questionId (Call struct) = Codec.Capnp.getWordField struct 0 0 0

has_Call'questionId :: Data.Capnp.Untyped.ReadCtx m => Call msg -> m Bool
has_Call'questionId(Call struct) = pure $ 0 < Data.Capnp.Untyped.length (Data.Capnp.Untyped.dataSection struct)
get_Call'target :: Data.Capnp.Untyped.ReadCtx m => Call msg -> m (MessageTarget msg)
get_Call'target (Call struct) =
    Data.Capnp.Untyped.getPtr 0 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)


has_Call'target :: Data.Capnp.Untyped.ReadCtx m => Call msg -> m Bool
has_Call'target(Call struct) = Data.Maybe.isJust <$> Data.Capnp.Untyped.getPtr 0 struct
get_Call'interfaceId :: Data.Capnp.Untyped.ReadCtx m => Call msg -> m Word64
get_Call'interfaceId (Call struct) = Codec.Capnp.getWordField struct 1 0 0

has_Call'interfaceId :: Data.Capnp.Untyped.ReadCtx m => Call msg -> m Bool
has_Call'interfaceId(Call struct) = pure $ 1 < Data.Capnp.Untyped.length (Data.Capnp.Untyped.dataSection struct)
get_Call'methodId :: Data.Capnp.Untyped.ReadCtx m => Call msg -> m Word16
get_Call'methodId (Call struct) = Codec.Capnp.getWordField struct 0 32 0

has_Call'methodId :: Data.Capnp.Untyped.ReadCtx m => Call msg -> m Bool
has_Call'methodId(Call struct) = pure $ 0 < Data.Capnp.Untyped.length (Data.Capnp.Untyped.dataSection struct)
get_Call'params :: Data.Capnp.Untyped.ReadCtx m => Call msg -> m (Payload msg)
get_Call'params (Call struct) =
    Data.Capnp.Untyped.getPtr 1 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)


has_Call'params :: Data.Capnp.Untyped.ReadCtx m => Call msg -> m Bool
has_Call'params(Call struct) = Data.Maybe.isJust <$> Data.Capnp.Untyped.getPtr 1 struct
get_Call'sendResultsTo :: Data.Capnp.Untyped.ReadCtx m => Call msg -> m (Call'sendResultsTo msg)
get_Call'sendResultsTo (Call struct) = Codec.Capnp.fromStruct struct

has_Call'sendResultsTo :: Data.Capnp.Untyped.ReadCtx m => Call msg -> m Bool
has_Call'sendResultsTo(Call struct) = pure True
get_Call'allowThirdPartyTailCall :: Data.Capnp.Untyped.ReadCtx m => Call msg -> m Bool
get_Call'allowThirdPartyTailCall (Call struct) = Codec.Capnp.getWordField struct 2 0 0

has_Call'allowThirdPartyTailCall :: Data.Capnp.Untyped.ReadCtx m => Call msg -> m Bool
has_Call'allowThirdPartyTailCall(Call struct) = pure $ 2 < Data.Capnp.Untyped.length (Data.Capnp.Untyped.dataSection struct)
data CapDescriptor msg
    = CapDescriptor'none
    | CapDescriptor'senderHosted Word32
    | CapDescriptor'senderPromise Word32
    | CapDescriptor'receiverHosted Word32
    | CapDescriptor'receiverAnswer (PromisedAnswer msg)
    | CapDescriptor'thirdPartyHosted (ThirdPartyCapDescriptor msg)
    | CapDescriptor'unknown' Word16







instance Codec.Capnp.IsStruct (CapDescriptor msg) where
    fromStruct struct = do
        tag <-  Codec.Capnp.getWordField struct 0 0 0
        case tag of
            5 -> CapDescriptor'thirdPartyHosted <$>  (Data.Capnp.Untyped.getPtr 0 struct >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct))
            4 -> CapDescriptor'receiverAnswer <$>  (Data.Capnp.Untyped.getPtr 0 struct >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct))
            3 -> CapDescriptor'receiverHosted <$>  Codec.Capnp.getWordField struct 0 32 0
            2 -> CapDescriptor'senderPromise <$>  Codec.Capnp.getWordField struct 0 32 0
            1 -> CapDescriptor'senderHosted <$>  Codec.Capnp.getWordField struct 0 32 0
            0 -> pure CapDescriptor'none
            _ -> pure $ CapDescriptor'unknown' tag

instance Codec.Capnp.IsPtr (CapDescriptor msg) where
    fromPtr = Codec.Capnp.structPtr
instance Codec.Capnp.IsPtr (Data.Capnp.Untyped.ListOf (CapDescriptor msg)) where
    fromPtr = Codec.Capnp.structListPtr

data Message msg
    = Message'unimplemented (Message msg)
    | Message'abort (Exception msg)
    | Message'call (Call msg)
    | Message'return (Return msg)
    | Message'finish (Finish msg)
    | Message'resolve (Resolve msg)
    | Message'release (Release msg)
    | Message'obsoleteSave (Maybe Data.Capnp.Untyped.Ptr)
    | Message'bootstrap (Bootstrap msg)
    | Message'obsoleteDelete (Maybe Data.Capnp.Untyped.Ptr)
    | Message'provide (Provide msg)
    | Message'accept (Accept msg)
    | Message'join (Join msg)
    | Message'disembargo (Disembargo msg)
    | Message'unknown' Word16















instance Codec.Capnp.IsStruct (Message msg) where
    fromStruct struct = do
        tag <-  Codec.Capnp.getWordField struct 0 0 0
        case tag of
            13 -> Message'disembargo <$>  (Data.Capnp.Untyped.getPtr 0 struct >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct))
            12 -> Message'join <$>  (Data.Capnp.Untyped.getPtr 0 struct >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct))
            11 -> Message'accept <$>  (Data.Capnp.Untyped.getPtr 0 struct >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct))
            10 -> Message'provide <$>  (Data.Capnp.Untyped.getPtr 0 struct >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct))
            9 -> Message'obsoleteDelete <$>  (Data.Capnp.Untyped.getPtr 0 struct >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct))
            8 -> Message'bootstrap <$>  (Data.Capnp.Untyped.getPtr 0 struct >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct))
            7 -> Message'obsoleteSave <$>  (Data.Capnp.Untyped.getPtr 0 struct >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct))
            6 -> Message'release <$>  (Data.Capnp.Untyped.getPtr 0 struct >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct))
            5 -> Message'resolve <$>  (Data.Capnp.Untyped.getPtr 0 struct >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct))
            4 -> Message'finish <$>  (Data.Capnp.Untyped.getPtr 0 struct >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct))
            3 -> Message'return <$>  (Data.Capnp.Untyped.getPtr 0 struct >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct))
            2 -> Message'call <$>  (Data.Capnp.Untyped.getPtr 0 struct >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct))
            1 -> Message'abort <$>  (Data.Capnp.Untyped.getPtr 0 struct >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct))
            0 -> Message'unimplemented <$>  (Data.Capnp.Untyped.getPtr 0 struct >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct))
            _ -> pure $ Message'unknown' tag

instance Codec.Capnp.IsPtr (Message msg) where
    fromPtr = Codec.Capnp.structPtr
instance Codec.Capnp.IsPtr (Data.Capnp.Untyped.ListOf (Message msg)) where
    fromPtr = Codec.Capnp.structListPtr

data MessageTarget msg
    = MessageTarget'importedCap Word32
    | MessageTarget'promisedAnswer (PromisedAnswer msg)
    | MessageTarget'unknown' Word16



instance Codec.Capnp.IsStruct (MessageTarget msg) where
    fromStruct struct = do
        tag <-  Codec.Capnp.getWordField struct 0 32 0
        case tag of
            1 -> MessageTarget'promisedAnswer <$>  (Data.Capnp.Untyped.getPtr 0 struct >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct))
            0 -> MessageTarget'importedCap <$>  Codec.Capnp.getWordField struct 0 0 0
            _ -> pure $ MessageTarget'unknown' tag

instance Codec.Capnp.IsPtr (MessageTarget msg) where
    fromPtr = Codec.Capnp.structPtr
instance Codec.Capnp.IsPtr (Data.Capnp.Untyped.ListOf (MessageTarget msg)) where
    fromPtr = Codec.Capnp.structListPtr

newtype Payload msg = Payload Data.Capnp.Untyped.Struct

instance Codec.Capnp.IsStruct (Payload msg) where
    fromStruct = pure . Payload
instance Codec.Capnp.IsPtr (Payload msg) where
    fromPtr = Codec.Capnp.structPtr
instance Data.Capnp.BuiltinTypes.Generic.ListElem msg (Payload msg) where
    newtype List msg (Payload msg) = List_Payload (Data.Capnp.Untyped.ListOf Data.Capnp.Untyped.Struct)
    length (List_Payload l) = Data.Capnp.Untyped.length l
    index i (List_Payload l) = Payload <$> Data.Capnp.Untyped.index i l
instance Data.Capnp.BuiltinTypes.Generic.MutListElem s (Payload (Data.Capnp.Message.Mutable.Message s)) where
    setIndex (Payload elt) i (List_Payload l) = error "TODO: Generate code for setIndex"

instance Codec.Capnp.IsPtr (Data.Capnp.Untyped.ListOf (Payload msg)) where
    fromPtr = Codec.Capnp.structListPtr
get_Payload'content :: Data.Capnp.Untyped.ReadCtx m => Payload msg -> m (Maybe Data.Capnp.Untyped.Ptr)
get_Payload'content (Payload struct) =
    Data.Capnp.Untyped.getPtr 0 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)


has_Payload'content :: Data.Capnp.Untyped.ReadCtx m => Payload msg -> m Bool
has_Payload'content(Payload struct) = Data.Maybe.isJust <$> Data.Capnp.Untyped.getPtr 0 struct
get_Payload'capTable :: Data.Capnp.Untyped.ReadCtx m => Payload msg -> m (Data.Capnp.Untyped.ListOf (CapDescriptor msg))
get_Payload'capTable (Payload struct) =
    Data.Capnp.Untyped.getPtr 1 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)


has_Payload'capTable :: Data.Capnp.Untyped.ReadCtx m => Payload msg -> m Bool
has_Payload'capTable(Payload struct) = Data.Maybe.isJust <$> Data.Capnp.Untyped.getPtr 1 struct
newtype Provide msg = Provide Data.Capnp.Untyped.Struct

instance Codec.Capnp.IsStruct (Provide msg) where
    fromStruct = pure . Provide
instance Codec.Capnp.IsPtr (Provide msg) where
    fromPtr = Codec.Capnp.structPtr
instance Data.Capnp.BuiltinTypes.Generic.ListElem msg (Provide msg) where
    newtype List msg (Provide msg) = List_Provide (Data.Capnp.Untyped.ListOf Data.Capnp.Untyped.Struct)
    length (List_Provide l) = Data.Capnp.Untyped.length l
    index i (List_Provide l) = Provide <$> Data.Capnp.Untyped.index i l
instance Data.Capnp.BuiltinTypes.Generic.MutListElem s (Provide (Data.Capnp.Message.Mutable.Message s)) where
    setIndex (Provide elt) i (List_Provide l) = error "TODO: Generate code for setIndex"

instance Codec.Capnp.IsPtr (Data.Capnp.Untyped.ListOf (Provide msg)) where
    fromPtr = Codec.Capnp.structListPtr
get_Provide'questionId :: Data.Capnp.Untyped.ReadCtx m => Provide msg -> m Word32
get_Provide'questionId (Provide struct) = Codec.Capnp.getWordField struct 0 0 0

has_Provide'questionId :: Data.Capnp.Untyped.ReadCtx m => Provide msg -> m Bool
has_Provide'questionId(Provide struct) = pure $ 0 < Data.Capnp.Untyped.length (Data.Capnp.Untyped.dataSection struct)
get_Provide'target :: Data.Capnp.Untyped.ReadCtx m => Provide msg -> m (MessageTarget msg)
get_Provide'target (Provide struct) =
    Data.Capnp.Untyped.getPtr 0 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)


has_Provide'target :: Data.Capnp.Untyped.ReadCtx m => Provide msg -> m Bool
has_Provide'target(Provide struct) = Data.Maybe.isJust <$> Data.Capnp.Untyped.getPtr 0 struct
get_Provide'recipient :: Data.Capnp.Untyped.ReadCtx m => Provide msg -> m (Maybe Data.Capnp.Untyped.Ptr)
get_Provide'recipient (Provide struct) =
    Data.Capnp.Untyped.getPtr 1 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)


has_Provide'recipient :: Data.Capnp.Untyped.ReadCtx m => Provide msg -> m Bool
has_Provide'recipient(Provide struct) = Data.Maybe.isJust <$> Data.Capnp.Untyped.getPtr 1 struct
newtype Return msg = Return Data.Capnp.Untyped.Struct

instance Codec.Capnp.IsStruct (Return msg) where
    fromStruct = pure . Return
instance Codec.Capnp.IsPtr (Return msg) where
    fromPtr = Codec.Capnp.structPtr
instance Data.Capnp.BuiltinTypes.Generic.ListElem msg (Return msg) where
    newtype List msg (Return msg) = List_Return (Data.Capnp.Untyped.ListOf Data.Capnp.Untyped.Struct)
    length (List_Return l) = Data.Capnp.Untyped.length l
    index i (List_Return l) = Return <$> Data.Capnp.Untyped.index i l
instance Data.Capnp.BuiltinTypes.Generic.MutListElem s (Return (Data.Capnp.Message.Mutable.Message s)) where
    setIndex (Return elt) i (List_Return l) = error "TODO: Generate code for setIndex"

instance Codec.Capnp.IsPtr (Data.Capnp.Untyped.ListOf (Return msg)) where
    fromPtr = Codec.Capnp.structListPtr
get_Return''answerId :: Data.Capnp.Untyped.ReadCtx m => Return msg -> m Word32
get_Return''answerId (Return struct) = Codec.Capnp.getWordField struct 0 0 0

has_Return''answerId :: Data.Capnp.Untyped.ReadCtx m => Return msg -> m Bool
has_Return''answerId(Return struct) = pure $ 0 < Data.Capnp.Untyped.length (Data.Capnp.Untyped.dataSection struct)
get_Return''releaseParamCaps :: Data.Capnp.Untyped.ReadCtx m => Return msg -> m Bool
get_Return''releaseParamCaps (Return struct) = Codec.Capnp.getWordField struct 0 32 1

has_Return''releaseParamCaps :: Data.Capnp.Untyped.ReadCtx m => Return msg -> m Bool
has_Return''releaseParamCaps(Return struct) = pure $ 0 < Data.Capnp.Untyped.length (Data.Capnp.Untyped.dataSection struct)
get_Return''union' :: Data.Capnp.Untyped.ReadCtx m => Return msg -> m (Return' msg)
get_Return''union' (Return struct) = Codec.Capnp.fromStruct struct

has_Return''union' :: Data.Capnp.Untyped.ReadCtx m => Return msg -> m Bool
has_Return''union'(Return struct) = pure True
data Return' msg
    = Return'results (Payload msg)
    | Return'exception (Exception msg)
    | Return'canceled
    | Return'resultsSentElsewhere
    | Return'takeFromOtherQuestion Word32
    | Return'acceptFromThirdParty (Maybe Data.Capnp.Untyped.Ptr)
    | Return'unknown' Word16







instance Codec.Capnp.IsStruct (Return' msg) where
    fromStruct struct = do
        tag <-  Codec.Capnp.getWordField struct 0 48 0
        case tag of
            5 -> Return'acceptFromThirdParty <$>  (Data.Capnp.Untyped.getPtr 0 struct >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct))
            4 -> Return'takeFromOtherQuestion <$>  Codec.Capnp.getWordField struct 1 0 0
            3 -> pure Return'resultsSentElsewhere
            2 -> pure Return'canceled
            1 -> Return'exception <$>  (Data.Capnp.Untyped.getPtr 0 struct >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct))
            0 -> Return'results <$>  (Data.Capnp.Untyped.getPtr 0 struct >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct))
            _ -> pure $ Return'unknown' tag

instance Codec.Capnp.IsPtr (Return' msg) where
    fromPtr = Codec.Capnp.structPtr
instance Codec.Capnp.IsPtr (Data.Capnp.Untyped.ListOf (Return' msg)) where
    fromPtr = Codec.Capnp.structListPtr

newtype Release msg = Release Data.Capnp.Untyped.Struct

instance Codec.Capnp.IsStruct (Release msg) where
    fromStruct = pure . Release
instance Codec.Capnp.IsPtr (Release msg) where
    fromPtr = Codec.Capnp.structPtr
instance Data.Capnp.BuiltinTypes.Generic.ListElem msg (Release msg) where
    newtype List msg (Release msg) = List_Release (Data.Capnp.Untyped.ListOf Data.Capnp.Untyped.Struct)
    length (List_Release l) = Data.Capnp.Untyped.length l
    index i (List_Release l) = Release <$> Data.Capnp.Untyped.index i l
instance Data.Capnp.BuiltinTypes.Generic.MutListElem s (Release (Data.Capnp.Message.Mutable.Message s)) where
    setIndex (Release elt) i (List_Release l) = error "TODO: Generate code for setIndex"

instance Codec.Capnp.IsPtr (Data.Capnp.Untyped.ListOf (Release msg)) where
    fromPtr = Codec.Capnp.structListPtr
get_Release'id :: Data.Capnp.Untyped.ReadCtx m => Release msg -> m Word32
get_Release'id (Release struct) = Codec.Capnp.getWordField struct 0 0 0

has_Release'id :: Data.Capnp.Untyped.ReadCtx m => Release msg -> m Bool
has_Release'id(Release struct) = pure $ 0 < Data.Capnp.Untyped.length (Data.Capnp.Untyped.dataSection struct)
get_Release'referenceCount :: Data.Capnp.Untyped.ReadCtx m => Release msg -> m Word32
get_Release'referenceCount (Release struct) = Codec.Capnp.getWordField struct 0 32 0

has_Release'referenceCount :: Data.Capnp.Untyped.ReadCtx m => Release msg -> m Bool
has_Release'referenceCount(Release struct) = pure $ 0 < Data.Capnp.Untyped.length (Data.Capnp.Untyped.dataSection struct)
data Exception'Type
    = Exception'Type'failed
    | Exception'Type'overloaded
    | Exception'Type'disconnected
    | Exception'Type'unimplemented
    | Exception'Type'unknown' Word16
instance Enum Exception'Type where
    toEnum = Codec.Capnp.fromWord . fromIntegral
    fromEnum = fromIntegral . Codec.Capnp.toWord


instance Codec.Capnp.IsWord Exception'Type where
    fromWord n = go (fromIntegral n :: Word16)
      where
        go 3 = Exception'Type'unimplemented
        go 2 = Exception'Type'disconnected
        go 1 = Exception'Type'overloaded
        go 0 = Exception'Type'failed
        go tag = Exception'Type'unknown' (fromIntegral tag)
    toWord Exception'Type'unimplemented = 3
    toWord Exception'Type'disconnected = 2
    toWord Exception'Type'overloaded = 1
    toWord Exception'Type'failed = 0
    toWord (Exception'Type'unknown' tag) = fromIntegral tag
instance Data.Capnp.BuiltinTypes.Generic.ListElem msg Exception'Type where
    newtype List msg Exception'Type = List_Exception'Type (Data.Capnp.Untyped.ListOf Word16)
    length (List_Exception'Type l) = Data.Capnp.Untyped.length l
    index i (List_Exception'Type l) = (Codec.Capnp.fromWord . fromIntegral) <$> Data.Capnp.Untyped.index i l
instance Data.Capnp.BuiltinTypes.Generic.MutListElem s Exception'Type where
    setIndex elt i (List_Exception'Type l) = error "TODO: generate code for setIndex"
instance Codec.Capnp.IsPtr (Data.Capnp.Untyped.ListOf Exception'Type) where
    fromPtr msg ptr = fmap
       (fmap (toEnum . (fromIntegral :: Word16 -> Int)))
       (Codec.Capnp.fromPtr msg ptr)

newtype Resolve msg = Resolve Data.Capnp.Untyped.Struct

instance Codec.Capnp.IsStruct (Resolve msg) where
    fromStruct = pure . Resolve
instance Codec.Capnp.IsPtr (Resolve msg) where
    fromPtr = Codec.Capnp.structPtr
instance Data.Capnp.BuiltinTypes.Generic.ListElem msg (Resolve msg) where
    newtype List msg (Resolve msg) = List_Resolve (Data.Capnp.Untyped.ListOf Data.Capnp.Untyped.Struct)
    length (List_Resolve l) = Data.Capnp.Untyped.length l
    index i (List_Resolve l) = Resolve <$> Data.Capnp.Untyped.index i l
instance Data.Capnp.BuiltinTypes.Generic.MutListElem s (Resolve (Data.Capnp.Message.Mutable.Message s)) where
    setIndex (Resolve elt) i (List_Resolve l) = error "TODO: Generate code for setIndex"

instance Codec.Capnp.IsPtr (Data.Capnp.Untyped.ListOf (Resolve msg)) where
    fromPtr = Codec.Capnp.structListPtr
get_Resolve''promiseId :: Data.Capnp.Untyped.ReadCtx m => Resolve msg -> m Word32
get_Resolve''promiseId (Resolve struct) = Codec.Capnp.getWordField struct 0 0 0

has_Resolve''promiseId :: Data.Capnp.Untyped.ReadCtx m => Resolve msg -> m Bool
has_Resolve''promiseId(Resolve struct) = pure $ 0 < Data.Capnp.Untyped.length (Data.Capnp.Untyped.dataSection struct)
get_Resolve''union' :: Data.Capnp.Untyped.ReadCtx m => Resolve msg -> m (Resolve' msg)
get_Resolve''union' (Resolve struct) = Codec.Capnp.fromStruct struct

has_Resolve''union' :: Data.Capnp.Untyped.ReadCtx m => Resolve msg -> m Bool
has_Resolve''union'(Resolve struct) = pure True
data Resolve' msg
    = Resolve'cap (CapDescriptor msg)
    | Resolve'exception (Exception msg)
    | Resolve'unknown' Word16



instance Codec.Capnp.IsStruct (Resolve' msg) where
    fromStruct struct = do
        tag <-  Codec.Capnp.getWordField struct 0 32 0
        case tag of
            1 -> Resolve'exception <$>  (Data.Capnp.Untyped.getPtr 0 struct >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct))
            0 -> Resolve'cap <$>  (Data.Capnp.Untyped.getPtr 0 struct >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct))
            _ -> pure $ Resolve'unknown' tag

instance Codec.Capnp.IsPtr (Resolve' msg) where
    fromPtr = Codec.Capnp.structPtr
instance Codec.Capnp.IsPtr (Data.Capnp.Untyped.ListOf (Resolve' msg)) where
    fromPtr = Codec.Capnp.structListPtr

newtype ThirdPartyCapDescriptor msg = ThirdPartyCapDescriptor Data.Capnp.Untyped.Struct

instance Codec.Capnp.IsStruct (ThirdPartyCapDescriptor msg) where
    fromStruct = pure . ThirdPartyCapDescriptor
instance Codec.Capnp.IsPtr (ThirdPartyCapDescriptor msg) where
    fromPtr = Codec.Capnp.structPtr
instance Data.Capnp.BuiltinTypes.Generic.ListElem msg (ThirdPartyCapDescriptor msg) where
    newtype List msg (ThirdPartyCapDescriptor msg) = List_ThirdPartyCapDescriptor (Data.Capnp.Untyped.ListOf Data.Capnp.Untyped.Struct)
    length (List_ThirdPartyCapDescriptor l) = Data.Capnp.Untyped.length l
    index i (List_ThirdPartyCapDescriptor l) = ThirdPartyCapDescriptor <$> Data.Capnp.Untyped.index i l
instance Data.Capnp.BuiltinTypes.Generic.MutListElem s (ThirdPartyCapDescriptor (Data.Capnp.Message.Mutable.Message s)) where
    setIndex (ThirdPartyCapDescriptor elt) i (List_ThirdPartyCapDescriptor l) = error "TODO: Generate code for setIndex"

instance Codec.Capnp.IsPtr (Data.Capnp.Untyped.ListOf (ThirdPartyCapDescriptor msg)) where
    fromPtr = Codec.Capnp.structListPtr
get_ThirdPartyCapDescriptor'id :: Data.Capnp.Untyped.ReadCtx m => ThirdPartyCapDescriptor msg -> m (Maybe Data.Capnp.Untyped.Ptr)
get_ThirdPartyCapDescriptor'id (ThirdPartyCapDescriptor struct) =
    Data.Capnp.Untyped.getPtr 0 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)


has_ThirdPartyCapDescriptor'id :: Data.Capnp.Untyped.ReadCtx m => ThirdPartyCapDescriptor msg -> m Bool
has_ThirdPartyCapDescriptor'id(ThirdPartyCapDescriptor struct) = Data.Maybe.isJust <$> Data.Capnp.Untyped.getPtr 0 struct
get_ThirdPartyCapDescriptor'vineId :: Data.Capnp.Untyped.ReadCtx m => ThirdPartyCapDescriptor msg -> m Word32
get_ThirdPartyCapDescriptor'vineId (ThirdPartyCapDescriptor struct) = Codec.Capnp.getWordField struct 0 0 0

has_ThirdPartyCapDescriptor'vineId :: Data.Capnp.Untyped.ReadCtx m => ThirdPartyCapDescriptor msg -> m Bool
has_ThirdPartyCapDescriptor'vineId(ThirdPartyCapDescriptor struct) = pure $ 0 < Data.Capnp.Untyped.length (Data.Capnp.Untyped.dataSection struct)
newtype Finish msg = Finish Data.Capnp.Untyped.Struct

instance Codec.Capnp.IsStruct (Finish msg) where
    fromStruct = pure . Finish
instance Codec.Capnp.IsPtr (Finish msg) where
    fromPtr = Codec.Capnp.structPtr
instance Data.Capnp.BuiltinTypes.Generic.ListElem msg (Finish msg) where
    newtype List msg (Finish msg) = List_Finish (Data.Capnp.Untyped.ListOf Data.Capnp.Untyped.Struct)
    length (List_Finish l) = Data.Capnp.Untyped.length l
    index i (List_Finish l) = Finish <$> Data.Capnp.Untyped.index i l
instance Data.Capnp.BuiltinTypes.Generic.MutListElem s (Finish (Data.Capnp.Message.Mutable.Message s)) where
    setIndex (Finish elt) i (List_Finish l) = error "TODO: Generate code for setIndex"

instance Codec.Capnp.IsPtr (Data.Capnp.Untyped.ListOf (Finish msg)) where
    fromPtr = Codec.Capnp.structListPtr
get_Finish'questionId :: Data.Capnp.Untyped.ReadCtx m => Finish msg -> m Word32
get_Finish'questionId (Finish struct) = Codec.Capnp.getWordField struct 0 0 0

has_Finish'questionId :: Data.Capnp.Untyped.ReadCtx m => Finish msg -> m Bool
has_Finish'questionId(Finish struct) = pure $ 0 < Data.Capnp.Untyped.length (Data.Capnp.Untyped.dataSection struct)
get_Finish'releaseResultCaps :: Data.Capnp.Untyped.ReadCtx m => Finish msg -> m Bool
get_Finish'releaseResultCaps (Finish struct) = Codec.Capnp.getWordField struct 0 32 1

has_Finish'releaseResultCaps :: Data.Capnp.Untyped.ReadCtx m => Finish msg -> m Bool
has_Finish'releaseResultCaps(Finish struct) = pure $ 0 < Data.Capnp.Untyped.length (Data.Capnp.Untyped.dataSection struct)
newtype Accept msg = Accept Data.Capnp.Untyped.Struct

instance Codec.Capnp.IsStruct (Accept msg) where
    fromStruct = pure . Accept
instance Codec.Capnp.IsPtr (Accept msg) where
    fromPtr = Codec.Capnp.structPtr
instance Data.Capnp.BuiltinTypes.Generic.ListElem msg (Accept msg) where
    newtype List msg (Accept msg) = List_Accept (Data.Capnp.Untyped.ListOf Data.Capnp.Untyped.Struct)
    length (List_Accept l) = Data.Capnp.Untyped.length l
    index i (List_Accept l) = Accept <$> Data.Capnp.Untyped.index i l
instance Data.Capnp.BuiltinTypes.Generic.MutListElem s (Accept (Data.Capnp.Message.Mutable.Message s)) where
    setIndex (Accept elt) i (List_Accept l) = error "TODO: Generate code for setIndex"

instance Codec.Capnp.IsPtr (Data.Capnp.Untyped.ListOf (Accept msg)) where
    fromPtr = Codec.Capnp.structListPtr
get_Accept'questionId :: Data.Capnp.Untyped.ReadCtx m => Accept msg -> m Word32
get_Accept'questionId (Accept struct) = Codec.Capnp.getWordField struct 0 0 0

has_Accept'questionId :: Data.Capnp.Untyped.ReadCtx m => Accept msg -> m Bool
has_Accept'questionId(Accept struct) = pure $ 0 < Data.Capnp.Untyped.length (Data.Capnp.Untyped.dataSection struct)
get_Accept'provision :: Data.Capnp.Untyped.ReadCtx m => Accept msg -> m (Maybe Data.Capnp.Untyped.Ptr)
get_Accept'provision (Accept struct) =
    Data.Capnp.Untyped.getPtr 0 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)


has_Accept'provision :: Data.Capnp.Untyped.ReadCtx m => Accept msg -> m Bool
has_Accept'provision(Accept struct) = Data.Maybe.isJust <$> Data.Capnp.Untyped.getPtr 0 struct
get_Accept'embargo :: Data.Capnp.Untyped.ReadCtx m => Accept msg -> m Bool
get_Accept'embargo (Accept struct) = Codec.Capnp.getWordField struct 0 32 0

has_Accept'embargo :: Data.Capnp.Untyped.ReadCtx m => Accept msg -> m Bool
has_Accept'embargo(Accept struct) = pure $ 0 < Data.Capnp.Untyped.length (Data.Capnp.Untyped.dataSection struct)
data Disembargo'context msg
    = Disembargo'context'senderLoopback Word32
    | Disembargo'context'receiverLoopback Word32
    | Disembargo'context'accept
    | Disembargo'context'provide Word32
    | Disembargo'context'unknown' Word16





instance Codec.Capnp.IsStruct (Disembargo'context msg) where
    fromStruct struct = do
        tag <-  Codec.Capnp.getWordField struct 0 32 0
        case tag of
            3 -> Disembargo'context'provide <$>  Codec.Capnp.getWordField struct 0 0 0
            2 -> pure Disembargo'context'accept
            1 -> Disembargo'context'receiverLoopback <$>  Codec.Capnp.getWordField struct 0 0 0
            0 -> Disembargo'context'senderLoopback <$>  Codec.Capnp.getWordField struct 0 0 0
            _ -> pure $ Disembargo'context'unknown' tag

instance Codec.Capnp.IsPtr (Disembargo'context msg) where
    fromPtr = Codec.Capnp.structPtr
instance Codec.Capnp.IsPtr (Data.Capnp.Untyped.ListOf (Disembargo'context msg)) where
    fromPtr = Codec.Capnp.structListPtr

newtype Exception msg = Exception Data.Capnp.Untyped.Struct

instance Codec.Capnp.IsStruct (Exception msg) where
    fromStruct = pure . Exception
instance Codec.Capnp.IsPtr (Exception msg) where
    fromPtr = Codec.Capnp.structPtr
instance Data.Capnp.BuiltinTypes.Generic.ListElem msg (Exception msg) where
    newtype List msg (Exception msg) = List_Exception (Data.Capnp.Untyped.ListOf Data.Capnp.Untyped.Struct)
    length (List_Exception l) = Data.Capnp.Untyped.length l
    index i (List_Exception l) = Exception <$> Data.Capnp.Untyped.index i l
instance Data.Capnp.BuiltinTypes.Generic.MutListElem s (Exception (Data.Capnp.Message.Mutable.Message s)) where
    setIndex (Exception elt) i (List_Exception l) = error "TODO: Generate code for setIndex"

instance Codec.Capnp.IsPtr (Data.Capnp.Untyped.ListOf (Exception msg)) where
    fromPtr = Codec.Capnp.structListPtr
get_Exception'reason :: Data.Capnp.Untyped.ReadCtx m => Exception msg -> m Data.Capnp.BuiltinTypes.Text
get_Exception'reason (Exception struct) =
    Data.Capnp.Untyped.getPtr 0 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)


has_Exception'reason :: Data.Capnp.Untyped.ReadCtx m => Exception msg -> m Bool
has_Exception'reason(Exception struct) = Data.Maybe.isJust <$> Data.Capnp.Untyped.getPtr 0 struct
get_Exception'obsoleteIsCallersFault :: Data.Capnp.Untyped.ReadCtx m => Exception msg -> m Bool
get_Exception'obsoleteIsCallersFault (Exception struct) = Codec.Capnp.getWordField struct 0 0 0

has_Exception'obsoleteIsCallersFault :: Data.Capnp.Untyped.ReadCtx m => Exception msg -> m Bool
has_Exception'obsoleteIsCallersFault(Exception struct) = pure $ 0 < Data.Capnp.Untyped.length (Data.Capnp.Untyped.dataSection struct)
get_Exception'obsoleteDurability :: Data.Capnp.Untyped.ReadCtx m => Exception msg -> m Word16
get_Exception'obsoleteDurability (Exception struct) = Codec.Capnp.getWordField struct 0 16 0

has_Exception'obsoleteDurability :: Data.Capnp.Untyped.ReadCtx m => Exception msg -> m Bool
has_Exception'obsoleteDurability(Exception struct) = pure $ 0 < Data.Capnp.Untyped.length (Data.Capnp.Untyped.dataSection struct)
get_Exception'type_ :: Data.Capnp.Untyped.ReadCtx m => Exception msg -> m Exception'Type
get_Exception'type_ (Exception struct) = Codec.Capnp.getWordField struct 0 32 0

has_Exception'type_ :: Data.Capnp.Untyped.ReadCtx m => Exception msg -> m Bool
has_Exception'type_(Exception struct) = pure $ 0 < Data.Capnp.Untyped.length (Data.Capnp.Untyped.dataSection struct)
newtype PromisedAnswer msg = PromisedAnswer Data.Capnp.Untyped.Struct

instance Codec.Capnp.IsStruct (PromisedAnswer msg) where
    fromStruct = pure . PromisedAnswer
instance Codec.Capnp.IsPtr (PromisedAnswer msg) where
    fromPtr = Codec.Capnp.structPtr
instance Data.Capnp.BuiltinTypes.Generic.ListElem msg (PromisedAnswer msg) where
    newtype List msg (PromisedAnswer msg) = List_PromisedAnswer (Data.Capnp.Untyped.ListOf Data.Capnp.Untyped.Struct)
    length (List_PromisedAnswer l) = Data.Capnp.Untyped.length l
    index i (List_PromisedAnswer l) = PromisedAnswer <$> Data.Capnp.Untyped.index i l
instance Data.Capnp.BuiltinTypes.Generic.MutListElem s (PromisedAnswer (Data.Capnp.Message.Mutable.Message s)) where
    setIndex (PromisedAnswer elt) i (List_PromisedAnswer l) = error "TODO: Generate code for setIndex"

instance Codec.Capnp.IsPtr (Data.Capnp.Untyped.ListOf (PromisedAnswer msg)) where
    fromPtr = Codec.Capnp.structListPtr
get_PromisedAnswer'questionId :: Data.Capnp.Untyped.ReadCtx m => PromisedAnswer msg -> m Word32
get_PromisedAnswer'questionId (PromisedAnswer struct) = Codec.Capnp.getWordField struct 0 0 0

has_PromisedAnswer'questionId :: Data.Capnp.Untyped.ReadCtx m => PromisedAnswer msg -> m Bool
has_PromisedAnswer'questionId(PromisedAnswer struct) = pure $ 0 < Data.Capnp.Untyped.length (Data.Capnp.Untyped.dataSection struct)
get_PromisedAnswer'transform :: Data.Capnp.Untyped.ReadCtx m => PromisedAnswer msg -> m (Data.Capnp.Untyped.ListOf (PromisedAnswer'Op msg))
get_PromisedAnswer'transform (PromisedAnswer struct) =
    Data.Capnp.Untyped.getPtr 0 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)


has_PromisedAnswer'transform :: Data.Capnp.Untyped.ReadCtx m => PromisedAnswer msg -> m Bool
has_PromisedAnswer'transform(PromisedAnswer struct) = Data.Maybe.isJust <$> Data.Capnp.Untyped.getPtr 0 struct
data Call'sendResultsTo msg
    = Call'sendResultsTo'caller
    | Call'sendResultsTo'yourself
    | Call'sendResultsTo'thirdParty (Maybe Data.Capnp.Untyped.Ptr)
    | Call'sendResultsTo'unknown' Word16




instance Codec.Capnp.IsStruct (Call'sendResultsTo msg) where
    fromStruct struct = do
        tag <-  Codec.Capnp.getWordField struct 0 48 0
        case tag of
            2 -> Call'sendResultsTo'thirdParty <$>  (Data.Capnp.Untyped.getPtr 2 struct >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct))
            1 -> pure Call'sendResultsTo'yourself
            0 -> pure Call'sendResultsTo'caller
            _ -> pure $ Call'sendResultsTo'unknown' tag

instance Codec.Capnp.IsPtr (Call'sendResultsTo msg) where
    fromPtr = Codec.Capnp.structPtr
instance Codec.Capnp.IsPtr (Data.Capnp.Untyped.ListOf (Call'sendResultsTo msg)) where
    fromPtr = Codec.Capnp.structListPtr

newtype Bootstrap msg = Bootstrap Data.Capnp.Untyped.Struct

instance Codec.Capnp.IsStruct (Bootstrap msg) where
    fromStruct = pure . Bootstrap
instance Codec.Capnp.IsPtr (Bootstrap msg) where
    fromPtr = Codec.Capnp.structPtr
instance Data.Capnp.BuiltinTypes.Generic.ListElem msg (Bootstrap msg) where
    newtype List msg (Bootstrap msg) = List_Bootstrap (Data.Capnp.Untyped.ListOf Data.Capnp.Untyped.Struct)
    length (List_Bootstrap l) = Data.Capnp.Untyped.length l
    index i (List_Bootstrap l) = Bootstrap <$> Data.Capnp.Untyped.index i l
instance Data.Capnp.BuiltinTypes.Generic.MutListElem s (Bootstrap (Data.Capnp.Message.Mutable.Message s)) where
    setIndex (Bootstrap elt) i (List_Bootstrap l) = error "TODO: Generate code for setIndex"

instance Codec.Capnp.IsPtr (Data.Capnp.Untyped.ListOf (Bootstrap msg)) where
    fromPtr = Codec.Capnp.structListPtr
get_Bootstrap'questionId :: Data.Capnp.Untyped.ReadCtx m => Bootstrap msg -> m Word32
get_Bootstrap'questionId (Bootstrap struct) = Codec.Capnp.getWordField struct 0 0 0

has_Bootstrap'questionId :: Data.Capnp.Untyped.ReadCtx m => Bootstrap msg -> m Bool
has_Bootstrap'questionId(Bootstrap struct) = pure $ 0 < Data.Capnp.Untyped.length (Data.Capnp.Untyped.dataSection struct)
get_Bootstrap'deprecatedObjectId :: Data.Capnp.Untyped.ReadCtx m => Bootstrap msg -> m (Maybe Data.Capnp.Untyped.Ptr)
get_Bootstrap'deprecatedObjectId (Bootstrap struct) =
    Data.Capnp.Untyped.getPtr 0 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)


has_Bootstrap'deprecatedObjectId :: Data.Capnp.Untyped.ReadCtx m => Bootstrap msg -> m Bool
has_Bootstrap'deprecatedObjectId(Bootstrap struct) = Data.Maybe.isJust <$> Data.Capnp.Untyped.getPtr 0 struct
data PromisedAnswer'Op msg
    = PromisedAnswer'Op'noop
    | PromisedAnswer'Op'getPointerField Word16
    | PromisedAnswer'Op'unknown' Word16



instance Codec.Capnp.IsStruct (PromisedAnswer'Op msg) where
    fromStruct struct = do
        tag <-  Codec.Capnp.getWordField struct 0 0 0
        case tag of
            1 -> PromisedAnswer'Op'getPointerField <$>  Codec.Capnp.getWordField struct 0 16 0
            0 -> pure PromisedAnswer'Op'noop
            _ -> pure $ PromisedAnswer'Op'unknown' tag

instance Codec.Capnp.IsPtr (PromisedAnswer'Op msg) where
    fromPtr = Codec.Capnp.structPtr
instance Codec.Capnp.IsPtr (Data.Capnp.Untyped.ListOf (PromisedAnswer'Op msg)) where
    fromPtr = Codec.Capnp.structListPtr

newtype Disembargo msg = Disembargo Data.Capnp.Untyped.Struct

instance Codec.Capnp.IsStruct (Disembargo msg) where
    fromStruct = pure . Disembargo
instance Codec.Capnp.IsPtr (Disembargo msg) where
    fromPtr = Codec.Capnp.structPtr
instance Data.Capnp.BuiltinTypes.Generic.ListElem msg (Disembargo msg) where
    newtype List msg (Disembargo msg) = List_Disembargo (Data.Capnp.Untyped.ListOf Data.Capnp.Untyped.Struct)
    length (List_Disembargo l) = Data.Capnp.Untyped.length l
    index i (List_Disembargo l) = Disembargo <$> Data.Capnp.Untyped.index i l
instance Data.Capnp.BuiltinTypes.Generic.MutListElem s (Disembargo (Data.Capnp.Message.Mutable.Message s)) where
    setIndex (Disembargo elt) i (List_Disembargo l) = error "TODO: Generate code for setIndex"

instance Codec.Capnp.IsPtr (Data.Capnp.Untyped.ListOf (Disembargo msg)) where
    fromPtr = Codec.Capnp.structListPtr
get_Disembargo'target :: Data.Capnp.Untyped.ReadCtx m => Disembargo msg -> m (MessageTarget msg)
get_Disembargo'target (Disembargo struct) =
    Data.Capnp.Untyped.getPtr 0 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)


has_Disembargo'target :: Data.Capnp.Untyped.ReadCtx m => Disembargo msg -> m Bool
has_Disembargo'target(Disembargo struct) = Data.Maybe.isJust <$> Data.Capnp.Untyped.getPtr 0 struct
get_Disembargo'context :: Data.Capnp.Untyped.ReadCtx m => Disembargo msg -> m (Disembargo'context msg)
get_Disembargo'context (Disembargo struct) = Codec.Capnp.fromStruct struct

has_Disembargo'context :: Data.Capnp.Untyped.ReadCtx m => Disembargo msg -> m Bool
has_Disembargo'context(Disembargo struct) = pure True
newtype Join msg = Join Data.Capnp.Untyped.Struct

instance Codec.Capnp.IsStruct (Join msg) where
    fromStruct = pure . Join
instance Codec.Capnp.IsPtr (Join msg) where
    fromPtr = Codec.Capnp.structPtr
instance Data.Capnp.BuiltinTypes.Generic.ListElem msg (Join msg) where
    newtype List msg (Join msg) = List_Join (Data.Capnp.Untyped.ListOf Data.Capnp.Untyped.Struct)
    length (List_Join l) = Data.Capnp.Untyped.length l
    index i (List_Join l) = Join <$> Data.Capnp.Untyped.index i l
instance Data.Capnp.BuiltinTypes.Generic.MutListElem s (Join (Data.Capnp.Message.Mutable.Message s)) where
    setIndex (Join elt) i (List_Join l) = error "TODO: Generate code for setIndex"

instance Codec.Capnp.IsPtr (Data.Capnp.Untyped.ListOf (Join msg)) where
    fromPtr = Codec.Capnp.structListPtr
get_Join'questionId :: Data.Capnp.Untyped.ReadCtx m => Join msg -> m Word32
get_Join'questionId (Join struct) = Codec.Capnp.getWordField struct 0 0 0

has_Join'questionId :: Data.Capnp.Untyped.ReadCtx m => Join msg -> m Bool
has_Join'questionId(Join struct) = pure $ 0 < Data.Capnp.Untyped.length (Data.Capnp.Untyped.dataSection struct)
get_Join'target :: Data.Capnp.Untyped.ReadCtx m => Join msg -> m (MessageTarget msg)
get_Join'target (Join struct) =
    Data.Capnp.Untyped.getPtr 0 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)


has_Join'target :: Data.Capnp.Untyped.ReadCtx m => Join msg -> m Bool
has_Join'target(Join struct) = Data.Maybe.isJust <$> Data.Capnp.Untyped.getPtr 0 struct
get_Join'keyPart :: Data.Capnp.Untyped.ReadCtx m => Join msg -> m (Maybe Data.Capnp.Untyped.Ptr)
get_Join'keyPart (Join struct) =
    Data.Capnp.Untyped.getPtr 1 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)


has_Join'keyPart :: Data.Capnp.Untyped.ReadCtx m => Join msg -> m Bool
has_Join'keyPart(Join struct) = Data.Maybe.isJust <$> Data.Capnp.Untyped.getPtr 1 struct