{-# LANGUAGE DuplicateRecordFields #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE ScopedTypeVariables #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}
module Capnp.Capnp.Json.Pure where

-- Code generated by capnpc-haskell. DO NOT EDIT.
-- Generated from schema file: capnp/json.capnp

import Data.Int
import Data.Word

import Data.Capnp.Untyped.Pure (List)
import Data.Capnp.Basics.Pure (Data, Text)
import Control.Monad.Catch (MonadThrow)
import Data.Capnp.TraversalLimit (MonadLimit)

import qualified Data.Capnp.Message
import qualified Data.Capnp.Untyped.Pure
import qualified Data.Capnp.Untyped
import qualified Codec.Capnp

import qualified Capnp.ById.X8ef99297a43a5e34
import qualified Capnp.ById.Xbdf87d7bb8304e81.Pure
import qualified Capnp.ById.Xbdf87d7bb8304e81

data JsonValue
    = JsonValue'null
    | JsonValue'boolean (Bool)
    | JsonValue'number (Double)
    | JsonValue'string (Text)
    | JsonValue'array (List (JsonValue))
    | JsonValue'object (List (JsonValue'Field))
    | JsonValue'call (JsonValue'Call)
    | JsonValue'unknown' (Word16)
    deriving(Show, Read, Eq)

instance Codec.Capnp.Decerialize (Capnp.ById.X8ef99297a43a5e34.JsonValue msg) JsonValue where
    decerialize raw = case raw of

        Capnp.ById.X8ef99297a43a5e34.JsonValue'null -> pure JsonValue'null
        Capnp.ById.X8ef99297a43a5e34.JsonValue'boolean val -> JsonValue'boolean <$> Codec.Capnp.decerialize val
        Capnp.ById.X8ef99297a43a5e34.JsonValue'number val -> JsonValue'number <$> Codec.Capnp.decerialize val
        Capnp.ById.X8ef99297a43a5e34.JsonValue'string val -> JsonValue'string <$> Codec.Capnp.decerialize val
        Capnp.ById.X8ef99297a43a5e34.JsonValue'array val -> JsonValue'array <$> Codec.Capnp.decerialize val
        Capnp.ById.X8ef99297a43a5e34.JsonValue'object val -> JsonValue'object <$> Codec.Capnp.decerialize val
        Capnp.ById.X8ef99297a43a5e34.JsonValue'call val -> JsonValue'call <$> Codec.Capnp.decerialize val
        Capnp.ById.X8ef99297a43a5e34.JsonValue'unknown' val -> JsonValue'unknown' <$> Codec.Capnp.decerialize val

instance Codec.Capnp.IsStruct JsonValue where
    fromStruct struct = do
        raw <- Codec.Capnp.fromStruct struct
        Codec.Capnp.decerialize (raw :: Capnp.ById.X8ef99297a43a5e34.JsonValue Data.Capnp.Message.Message)

data JsonValue'Call
    = JsonValue'Call
        { function :: Text
        , params :: List (JsonValue)
        }
    deriving(Show, Read, Eq)

instance Codec.Capnp.Decerialize (Capnp.ById.X8ef99297a43a5e34.JsonValue'Call msg) JsonValue'Call where
    decerialize raw = JsonValue'Call
            <$> (Capnp.ById.X8ef99297a43a5e34.get_JsonValue'Call'function raw >>= Codec.Capnp.decerialize)
            <*> (Capnp.ById.X8ef99297a43a5e34.get_JsonValue'Call'params raw >>= Codec.Capnp.decerialize)

instance Codec.Capnp.IsStruct JsonValue'Call where
    fromStruct struct = do
        raw <- Codec.Capnp.fromStruct struct
        Codec.Capnp.decerialize (raw :: Capnp.ById.X8ef99297a43a5e34.JsonValue'Call Data.Capnp.Message.Message)

data JsonValue'Field
    = JsonValue'Field
        { name :: Text
        , value :: JsonValue
        }
    deriving(Show, Read, Eq)

instance Codec.Capnp.Decerialize (Capnp.ById.X8ef99297a43a5e34.JsonValue'Field msg) JsonValue'Field where
    decerialize raw = JsonValue'Field
            <$> (Capnp.ById.X8ef99297a43a5e34.get_JsonValue'Field'name raw >>= Codec.Capnp.decerialize)
            <*> (Capnp.ById.X8ef99297a43a5e34.get_JsonValue'Field'value raw >>= Codec.Capnp.decerialize)

instance Codec.Capnp.IsStruct JsonValue'Field where
    fromStruct struct = do
        raw <- Codec.Capnp.fromStruct struct
        Codec.Capnp.decerialize (raw :: Capnp.ById.X8ef99297a43a5e34.JsonValue'Field Data.Capnp.Message.Message)

