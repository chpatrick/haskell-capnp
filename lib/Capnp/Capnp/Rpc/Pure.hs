{-# LANGUAGE DuplicateRecordFields #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE ScopedTypeVariables #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}
{- |
Module: Capnp.Capnp.Rpc.Pure
Description: High-level generated module for capnp/rpc.capnp

This module is the generated code for capnp/rpc.capnp,
for the high-level api.
-}
module Capnp.Capnp.Rpc.Pure where

-- Code generated by capnpc-haskell. DO NOT EDIT.
-- Generated from schema file: capnp/rpc.capnp

import Data.Int
import Data.Word

import Data.Capnp.Untyped.Pure (List)
import Data.Capnp.Basics.Pure (Data, Text)
import Control.Monad.Catch (MonadThrow)
import Data.Capnp.TraversalLimit (MonadLimit)

import qualified Data.Capnp.Message as M'
import qualified Data.Capnp.Untyped.Pure as PU'
import qualified Codec.Capnp as C'

import qualified Capnp.ById.Xb312981b2552a250
import qualified Capnp.ById.Xbdf87d7bb8304e81.Pure
import qualified Capnp.ById.Xbdf87d7bb8304e81

data Accept
    = Accept
        { questionId :: Word32
        , provision :: Maybe (PU'.PtrType)
        , embargo :: Bool
        }
    deriving(Show, Read, Eq)

instance C'.Decerialize (Capnp.ById.Xb312981b2552a250.Accept M'.ConstMsg) Accept where
    decerialize raw = Accept
                <$> (Capnp.ById.Xb312981b2552a250.get_Accept'questionId raw >>= C'.decerialize)
                <*> (Capnp.ById.Xb312981b2552a250.get_Accept'provision raw >>= C'.decerialize)
                <*> (Capnp.ById.Xb312981b2552a250.get_Accept'embargo raw >>= C'.decerialize)

instance C'.IsStruct M'.ConstMsg Accept where
    fromStruct struct = do
        raw <- C'.fromStruct struct
        C'.decerialize (raw :: Capnp.ById.Xb312981b2552a250.Accept M'.ConstMsg)

instance C'.Cerialize s Accept (Capnp.ById.Xb312981b2552a250.Accept (M'.MutMsg s)) where
    marshalInto raw value = do
        pure ()
data Bootstrap
    = Bootstrap
        { questionId :: Word32
        , deprecatedObjectId :: Maybe (PU'.PtrType)
        }
    deriving(Show, Read, Eq)

instance C'.Decerialize (Capnp.ById.Xb312981b2552a250.Bootstrap M'.ConstMsg) Bootstrap where
    decerialize raw = Bootstrap
                <$> (Capnp.ById.Xb312981b2552a250.get_Bootstrap'questionId raw >>= C'.decerialize)
                <*> (Capnp.ById.Xb312981b2552a250.get_Bootstrap'deprecatedObjectId raw >>= C'.decerialize)

instance C'.IsStruct M'.ConstMsg Bootstrap where
    fromStruct struct = do
        raw <- C'.fromStruct struct
        C'.decerialize (raw :: Capnp.ById.Xb312981b2552a250.Bootstrap M'.ConstMsg)

instance C'.Cerialize s Bootstrap (Capnp.ById.Xb312981b2552a250.Bootstrap (M'.MutMsg s)) where
    marshalInto raw value = do
        pure ()
data Call
    = Call
        { questionId :: Word32
        , target :: MessageTarget
        , interfaceId :: Word64
        , methodId :: Word16
        , params :: Payload
        , sendResultsTo :: Call'sendResultsTo
        , allowThirdPartyTailCall :: Bool
        }
    deriving(Show, Read, Eq)

instance C'.Decerialize (Capnp.ById.Xb312981b2552a250.Call M'.ConstMsg) Call where
    decerialize raw = Call
                <$> (Capnp.ById.Xb312981b2552a250.get_Call'questionId raw >>= C'.decerialize)
                <*> (Capnp.ById.Xb312981b2552a250.get_Call'target raw >>= C'.decerialize)
                <*> (Capnp.ById.Xb312981b2552a250.get_Call'interfaceId raw >>= C'.decerialize)
                <*> (Capnp.ById.Xb312981b2552a250.get_Call'methodId raw >>= C'.decerialize)
                <*> (Capnp.ById.Xb312981b2552a250.get_Call'params raw >>= C'.decerialize)
                <*> (Capnp.ById.Xb312981b2552a250.get_Call'sendResultsTo raw >>= C'.decerialize)
                <*> (Capnp.ById.Xb312981b2552a250.get_Call'allowThirdPartyTailCall raw >>= C'.decerialize)

instance C'.IsStruct M'.ConstMsg Call where
    fromStruct struct = do
        raw <- C'.fromStruct struct
        C'.decerialize (raw :: Capnp.ById.Xb312981b2552a250.Call M'.ConstMsg)

instance C'.Cerialize s Call (Capnp.ById.Xb312981b2552a250.Call (M'.MutMsg s)) where
    marshalInto raw value = do
        pure ()
data CapDescriptor
    = CapDescriptor'none
    | CapDescriptor'senderHosted (Word32)
    | CapDescriptor'senderPromise (Word32)
    | CapDescriptor'receiverHosted (Word32)
    | CapDescriptor'receiverAnswer (PromisedAnswer)
    | CapDescriptor'thirdPartyHosted (ThirdPartyCapDescriptor)
    | CapDescriptor'unknown' (Word16)
    deriving(Show, Read, Eq)

instance C'.Decerialize (Capnp.ById.Xb312981b2552a250.CapDescriptor M'.ConstMsg) CapDescriptor where
    decerialize raw = do
        raw <- Capnp.ById.Xb312981b2552a250.get_CapDescriptor' raw
        case raw of
            Capnp.ById.Xb312981b2552a250.CapDescriptor'none -> pure CapDescriptor'none
            Capnp.ById.Xb312981b2552a250.CapDescriptor'senderHosted val -> CapDescriptor'senderHosted <$> C'.decerialize val
            Capnp.ById.Xb312981b2552a250.CapDescriptor'senderPromise val -> CapDescriptor'senderPromise <$> C'.decerialize val
            Capnp.ById.Xb312981b2552a250.CapDescriptor'receiverHosted val -> CapDescriptor'receiverHosted <$> C'.decerialize val
            Capnp.ById.Xb312981b2552a250.CapDescriptor'receiverAnswer val -> CapDescriptor'receiverAnswer <$> C'.decerialize val
            Capnp.ById.Xb312981b2552a250.CapDescriptor'thirdPartyHosted val -> CapDescriptor'thirdPartyHosted <$> C'.decerialize val
            Capnp.ById.Xb312981b2552a250.CapDescriptor'unknown' val -> CapDescriptor'unknown' <$> C'.decerialize val

instance C'.IsStruct M'.ConstMsg CapDescriptor where
    fromStruct struct = do
        raw <- C'.fromStruct struct
        C'.decerialize (raw :: Capnp.ById.Xb312981b2552a250.CapDescriptor M'.ConstMsg)

instance C'.Cerialize s CapDescriptor (Capnp.ById.Xb312981b2552a250.CapDescriptor (M'.MutMsg s)) where
    marshalInto raw value = do
        pure ()
data Disembargo
    = Disembargo
        { target :: MessageTarget
        , context :: Disembargo'context
        }
    deriving(Show, Read, Eq)

instance C'.Decerialize (Capnp.ById.Xb312981b2552a250.Disembargo M'.ConstMsg) Disembargo where
    decerialize raw = Disembargo
                <$> (Capnp.ById.Xb312981b2552a250.get_Disembargo'target raw >>= C'.decerialize)
                <*> (Capnp.ById.Xb312981b2552a250.get_Disembargo'context raw >>= C'.decerialize)

instance C'.IsStruct M'.ConstMsg Disembargo where
    fromStruct struct = do
        raw <- C'.fromStruct struct
        C'.decerialize (raw :: Capnp.ById.Xb312981b2552a250.Disembargo M'.ConstMsg)

instance C'.Cerialize s Disembargo (Capnp.ById.Xb312981b2552a250.Disembargo (M'.MutMsg s)) where
    marshalInto raw value = do
        pure ()
data Exception
    = Exception
        { reason :: Text
        , obsoleteIsCallersFault :: Bool
        , obsoleteDurability :: Word16
        , type_ :: Exception'Type
        }
    deriving(Show, Read, Eq)

instance C'.Decerialize (Capnp.ById.Xb312981b2552a250.Exception M'.ConstMsg) Exception where
    decerialize raw = Exception
                <$> (Capnp.ById.Xb312981b2552a250.get_Exception'reason raw >>= C'.decerialize)
                <*> (Capnp.ById.Xb312981b2552a250.get_Exception'obsoleteIsCallersFault raw >>= C'.decerialize)
                <*> (Capnp.ById.Xb312981b2552a250.get_Exception'obsoleteDurability raw >>= C'.decerialize)
                <*> (Capnp.ById.Xb312981b2552a250.get_Exception'type_ raw >>= C'.decerialize)

instance C'.IsStruct M'.ConstMsg Exception where
    fromStruct struct = do
        raw <- C'.fromStruct struct
        C'.decerialize (raw :: Capnp.ById.Xb312981b2552a250.Exception M'.ConstMsg)

instance C'.Cerialize s Exception (Capnp.ById.Xb312981b2552a250.Exception (M'.MutMsg s)) where
    marshalInto raw value = do
        pure ()
data Finish
    = Finish
        { questionId :: Word32
        , releaseResultCaps :: Bool
        }
    deriving(Show, Read, Eq)

instance C'.Decerialize (Capnp.ById.Xb312981b2552a250.Finish M'.ConstMsg) Finish where
    decerialize raw = Finish
                <$> (Capnp.ById.Xb312981b2552a250.get_Finish'questionId raw >>= C'.decerialize)
                <*> (Capnp.ById.Xb312981b2552a250.get_Finish'releaseResultCaps raw >>= C'.decerialize)

instance C'.IsStruct M'.ConstMsg Finish where
    fromStruct struct = do
        raw <- C'.fromStruct struct
        C'.decerialize (raw :: Capnp.ById.Xb312981b2552a250.Finish M'.ConstMsg)

instance C'.Cerialize s Finish (Capnp.ById.Xb312981b2552a250.Finish (M'.MutMsg s)) where
    marshalInto raw value = do
        pure ()
data Join
    = Join
        { questionId :: Word32
        , target :: MessageTarget
        , keyPart :: Maybe (PU'.PtrType)
        }
    deriving(Show, Read, Eq)

instance C'.Decerialize (Capnp.ById.Xb312981b2552a250.Join M'.ConstMsg) Join where
    decerialize raw = Join
                <$> (Capnp.ById.Xb312981b2552a250.get_Join'questionId raw >>= C'.decerialize)
                <*> (Capnp.ById.Xb312981b2552a250.get_Join'target raw >>= C'.decerialize)
                <*> (Capnp.ById.Xb312981b2552a250.get_Join'keyPart raw >>= C'.decerialize)

instance C'.IsStruct M'.ConstMsg Join where
    fromStruct struct = do
        raw <- C'.fromStruct struct
        C'.decerialize (raw :: Capnp.ById.Xb312981b2552a250.Join M'.ConstMsg)

instance C'.Cerialize s Join (Capnp.ById.Xb312981b2552a250.Join (M'.MutMsg s)) where
    marshalInto raw value = do
        pure ()
data Message
    = Message'unimplemented (Message)
    | Message'abort (Exception)
    | Message'call (Call)
    | Message'return (Return)
    | Message'finish (Finish)
    | Message'resolve (Resolve)
    | Message'release (Release)
    | Message'obsoleteSave (Maybe (PU'.PtrType))
    | Message'bootstrap (Bootstrap)
    | Message'obsoleteDelete (Maybe (PU'.PtrType))
    | Message'provide (Provide)
    | Message'accept (Accept)
    | Message'join (Join)
    | Message'disembargo (Disembargo)
    | Message'unknown' (Word16)
    deriving(Show, Read, Eq)

instance C'.Decerialize (Capnp.ById.Xb312981b2552a250.Message M'.ConstMsg) Message where
    decerialize raw = do
        raw <- Capnp.ById.Xb312981b2552a250.get_Message' raw
        case raw of
            Capnp.ById.Xb312981b2552a250.Message'unimplemented val -> Message'unimplemented <$> C'.decerialize val
            Capnp.ById.Xb312981b2552a250.Message'abort val -> Message'abort <$> C'.decerialize val
            Capnp.ById.Xb312981b2552a250.Message'call val -> Message'call <$> C'.decerialize val
            Capnp.ById.Xb312981b2552a250.Message'return val -> Message'return <$> C'.decerialize val
            Capnp.ById.Xb312981b2552a250.Message'finish val -> Message'finish <$> C'.decerialize val
            Capnp.ById.Xb312981b2552a250.Message'resolve val -> Message'resolve <$> C'.decerialize val
            Capnp.ById.Xb312981b2552a250.Message'release val -> Message'release <$> C'.decerialize val
            Capnp.ById.Xb312981b2552a250.Message'obsoleteSave val -> Message'obsoleteSave <$> C'.decerialize val
            Capnp.ById.Xb312981b2552a250.Message'bootstrap val -> Message'bootstrap <$> C'.decerialize val
            Capnp.ById.Xb312981b2552a250.Message'obsoleteDelete val -> Message'obsoleteDelete <$> C'.decerialize val
            Capnp.ById.Xb312981b2552a250.Message'provide val -> Message'provide <$> C'.decerialize val
            Capnp.ById.Xb312981b2552a250.Message'accept val -> Message'accept <$> C'.decerialize val
            Capnp.ById.Xb312981b2552a250.Message'join val -> Message'join <$> C'.decerialize val
            Capnp.ById.Xb312981b2552a250.Message'disembargo val -> Message'disembargo <$> C'.decerialize val
            Capnp.ById.Xb312981b2552a250.Message'unknown' val -> Message'unknown' <$> C'.decerialize val

instance C'.IsStruct M'.ConstMsg Message where
    fromStruct struct = do
        raw <- C'.fromStruct struct
        C'.decerialize (raw :: Capnp.ById.Xb312981b2552a250.Message M'.ConstMsg)

instance C'.Cerialize s Message (Capnp.ById.Xb312981b2552a250.Message (M'.MutMsg s)) where
    marshalInto raw value = do
        pure ()
data MessageTarget
    = MessageTarget'importedCap (Word32)
    | MessageTarget'promisedAnswer (PromisedAnswer)
    | MessageTarget'unknown' (Word16)
    deriving(Show, Read, Eq)

instance C'.Decerialize (Capnp.ById.Xb312981b2552a250.MessageTarget M'.ConstMsg) MessageTarget where
    decerialize raw = do
        raw <- Capnp.ById.Xb312981b2552a250.get_MessageTarget' raw
        case raw of
            Capnp.ById.Xb312981b2552a250.MessageTarget'importedCap val -> MessageTarget'importedCap <$> C'.decerialize val
            Capnp.ById.Xb312981b2552a250.MessageTarget'promisedAnswer val -> MessageTarget'promisedAnswer <$> C'.decerialize val
            Capnp.ById.Xb312981b2552a250.MessageTarget'unknown' val -> MessageTarget'unknown' <$> C'.decerialize val

instance C'.IsStruct M'.ConstMsg MessageTarget where
    fromStruct struct = do
        raw <- C'.fromStruct struct
        C'.decerialize (raw :: Capnp.ById.Xb312981b2552a250.MessageTarget M'.ConstMsg)

instance C'.Cerialize s MessageTarget (Capnp.ById.Xb312981b2552a250.MessageTarget (M'.MutMsg s)) where
    marshalInto raw value = do
        pure ()
data Payload
    = Payload
        { content :: Maybe (PU'.PtrType)
        , capTable :: List (CapDescriptor)
        }
    deriving(Show, Read, Eq)

instance C'.Decerialize (Capnp.ById.Xb312981b2552a250.Payload M'.ConstMsg) Payload where
    decerialize raw = Payload
                <$> (Capnp.ById.Xb312981b2552a250.get_Payload'content raw >>= C'.decerialize)
                <*> (Capnp.ById.Xb312981b2552a250.get_Payload'capTable raw >>= C'.decerialize)

instance C'.IsStruct M'.ConstMsg Payload where
    fromStruct struct = do
        raw <- C'.fromStruct struct
        C'.decerialize (raw :: Capnp.ById.Xb312981b2552a250.Payload M'.ConstMsg)

instance C'.Cerialize s Payload (Capnp.ById.Xb312981b2552a250.Payload (M'.MutMsg s)) where
    marshalInto raw value = do
        pure ()
data PromisedAnswer
    = PromisedAnswer
        { questionId :: Word32
        , transform :: List (PromisedAnswer'Op)
        }
    deriving(Show, Read, Eq)

instance C'.Decerialize (Capnp.ById.Xb312981b2552a250.PromisedAnswer M'.ConstMsg) PromisedAnswer where
    decerialize raw = PromisedAnswer
                <$> (Capnp.ById.Xb312981b2552a250.get_PromisedAnswer'questionId raw >>= C'.decerialize)
                <*> (Capnp.ById.Xb312981b2552a250.get_PromisedAnswer'transform raw >>= C'.decerialize)

instance C'.IsStruct M'.ConstMsg PromisedAnswer where
    fromStruct struct = do
        raw <- C'.fromStruct struct
        C'.decerialize (raw :: Capnp.ById.Xb312981b2552a250.PromisedAnswer M'.ConstMsg)

instance C'.Cerialize s PromisedAnswer (Capnp.ById.Xb312981b2552a250.PromisedAnswer (M'.MutMsg s)) where
    marshalInto raw value = do
        pure ()
data Provide
    = Provide
        { questionId :: Word32
        , target :: MessageTarget
        , recipient :: Maybe (PU'.PtrType)
        }
    deriving(Show, Read, Eq)

instance C'.Decerialize (Capnp.ById.Xb312981b2552a250.Provide M'.ConstMsg) Provide where
    decerialize raw = Provide
                <$> (Capnp.ById.Xb312981b2552a250.get_Provide'questionId raw >>= C'.decerialize)
                <*> (Capnp.ById.Xb312981b2552a250.get_Provide'target raw >>= C'.decerialize)
                <*> (Capnp.ById.Xb312981b2552a250.get_Provide'recipient raw >>= C'.decerialize)

instance C'.IsStruct M'.ConstMsg Provide where
    fromStruct struct = do
        raw <- C'.fromStruct struct
        C'.decerialize (raw :: Capnp.ById.Xb312981b2552a250.Provide M'.ConstMsg)

instance C'.Cerialize s Provide (Capnp.ById.Xb312981b2552a250.Provide (M'.MutMsg s)) where
    marshalInto raw value = do
        pure ()
data Release
    = Release
        { id :: Word32
        , referenceCount :: Word32
        }
    deriving(Show, Read, Eq)

instance C'.Decerialize (Capnp.ById.Xb312981b2552a250.Release M'.ConstMsg) Release where
    decerialize raw = Release
                <$> (Capnp.ById.Xb312981b2552a250.get_Release'id raw >>= C'.decerialize)
                <*> (Capnp.ById.Xb312981b2552a250.get_Release'referenceCount raw >>= C'.decerialize)

instance C'.IsStruct M'.ConstMsg Release where
    fromStruct struct = do
        raw <- C'.fromStruct struct
        C'.decerialize (raw :: Capnp.ById.Xb312981b2552a250.Release M'.ConstMsg)

instance C'.Cerialize s Release (Capnp.ById.Xb312981b2552a250.Release (M'.MutMsg s)) where
    marshalInto raw value = do
        pure ()
data Resolve
    = Resolve
        { promiseId :: Word32
        , union' :: Resolve'
        }
    deriving(Show, Read, Eq)

instance C'.Decerialize (Capnp.ById.Xb312981b2552a250.Resolve M'.ConstMsg) Resolve where
    decerialize raw = Resolve
                <$> (Capnp.ById.Xb312981b2552a250.get_Resolve'promiseId raw >>= C'.decerialize)
                <*> (Capnp.ById.Xb312981b2552a250.get_Resolve'union' raw >>= C'.decerialize)

instance C'.IsStruct M'.ConstMsg Resolve where
    fromStruct struct = do
        raw <- C'.fromStruct struct
        C'.decerialize (raw :: Capnp.ById.Xb312981b2552a250.Resolve M'.ConstMsg)

instance C'.Cerialize s Resolve (Capnp.ById.Xb312981b2552a250.Resolve (M'.MutMsg s)) where
    marshalInto raw value = do
        pure ()
data Return
    = Return
        { answerId :: Word32
        , releaseParamCaps :: Bool
        , union' :: Return'
        }
    deriving(Show, Read, Eq)

instance C'.Decerialize (Capnp.ById.Xb312981b2552a250.Return M'.ConstMsg) Return where
    decerialize raw = Return
                <$> (Capnp.ById.Xb312981b2552a250.get_Return'answerId raw >>= C'.decerialize)
                <*> (Capnp.ById.Xb312981b2552a250.get_Return'releaseParamCaps raw >>= C'.decerialize)
                <*> (Capnp.ById.Xb312981b2552a250.get_Return'union' raw >>= C'.decerialize)

instance C'.IsStruct M'.ConstMsg Return where
    fromStruct struct = do
        raw <- C'.fromStruct struct
        C'.decerialize (raw :: Capnp.ById.Xb312981b2552a250.Return M'.ConstMsg)

instance C'.Cerialize s Return (Capnp.ById.Xb312981b2552a250.Return (M'.MutMsg s)) where
    marshalInto raw value = do
        pure ()
data ThirdPartyCapDescriptor
    = ThirdPartyCapDescriptor
        { id :: Maybe (PU'.PtrType)
        , vineId :: Word32
        }
    deriving(Show, Read, Eq)

instance C'.Decerialize (Capnp.ById.Xb312981b2552a250.ThirdPartyCapDescriptor M'.ConstMsg) ThirdPartyCapDescriptor where
    decerialize raw = ThirdPartyCapDescriptor
                <$> (Capnp.ById.Xb312981b2552a250.get_ThirdPartyCapDescriptor'id raw >>= C'.decerialize)
                <*> (Capnp.ById.Xb312981b2552a250.get_ThirdPartyCapDescriptor'vineId raw >>= C'.decerialize)

instance C'.IsStruct M'.ConstMsg ThirdPartyCapDescriptor where
    fromStruct struct = do
        raw <- C'.fromStruct struct
        C'.decerialize (raw :: Capnp.ById.Xb312981b2552a250.ThirdPartyCapDescriptor M'.ConstMsg)

instance C'.Cerialize s ThirdPartyCapDescriptor (Capnp.ById.Xb312981b2552a250.ThirdPartyCapDescriptor (M'.MutMsg s)) where
    marshalInto raw value = do
        pure ()
data Call'sendResultsTo
    = Call'sendResultsTo'caller
    | Call'sendResultsTo'yourself
    | Call'sendResultsTo'thirdParty (Maybe (PU'.PtrType))
    | Call'sendResultsTo'unknown' (Word16)
    deriving(Show, Read, Eq)

instance C'.Decerialize (Capnp.ById.Xb312981b2552a250.Call'sendResultsTo M'.ConstMsg) Call'sendResultsTo where
    decerialize raw = do
        raw <- Capnp.ById.Xb312981b2552a250.get_Call'sendResultsTo' raw
        case raw of
            Capnp.ById.Xb312981b2552a250.Call'sendResultsTo'caller -> pure Call'sendResultsTo'caller
            Capnp.ById.Xb312981b2552a250.Call'sendResultsTo'yourself -> pure Call'sendResultsTo'yourself
            Capnp.ById.Xb312981b2552a250.Call'sendResultsTo'thirdParty val -> Call'sendResultsTo'thirdParty <$> C'.decerialize val
            Capnp.ById.Xb312981b2552a250.Call'sendResultsTo'unknown' val -> Call'sendResultsTo'unknown' <$> C'.decerialize val

instance C'.IsStruct M'.ConstMsg Call'sendResultsTo where
    fromStruct struct = do
        raw <- C'.fromStruct struct
        C'.decerialize (raw :: Capnp.ById.Xb312981b2552a250.Call'sendResultsTo M'.ConstMsg)

instance C'.Cerialize s Call'sendResultsTo (Capnp.ById.Xb312981b2552a250.Call'sendResultsTo (M'.MutMsg s)) where
    marshalInto raw value = do
        pure ()
data Disembargo'context
    = Disembargo'context'senderLoopback (Word32)
    | Disembargo'context'receiverLoopback (Word32)
    | Disembargo'context'accept
    | Disembargo'context'provide (Word32)
    | Disembargo'context'unknown' (Word16)
    deriving(Show, Read, Eq)

instance C'.Decerialize (Capnp.ById.Xb312981b2552a250.Disembargo'context M'.ConstMsg) Disembargo'context where
    decerialize raw = do
        raw <- Capnp.ById.Xb312981b2552a250.get_Disembargo'context' raw
        case raw of
            Capnp.ById.Xb312981b2552a250.Disembargo'context'senderLoopback val -> Disembargo'context'senderLoopback <$> C'.decerialize val
            Capnp.ById.Xb312981b2552a250.Disembargo'context'receiverLoopback val -> Disembargo'context'receiverLoopback <$> C'.decerialize val
            Capnp.ById.Xb312981b2552a250.Disembargo'context'accept -> pure Disembargo'context'accept
            Capnp.ById.Xb312981b2552a250.Disembargo'context'provide val -> Disembargo'context'provide <$> C'.decerialize val
            Capnp.ById.Xb312981b2552a250.Disembargo'context'unknown' val -> Disembargo'context'unknown' <$> C'.decerialize val

instance C'.IsStruct M'.ConstMsg Disembargo'context where
    fromStruct struct = do
        raw <- C'.fromStruct struct
        C'.decerialize (raw :: Capnp.ById.Xb312981b2552a250.Disembargo'context M'.ConstMsg)

instance C'.Cerialize s Disembargo'context (Capnp.ById.Xb312981b2552a250.Disembargo'context (M'.MutMsg s)) where
    marshalInto raw value = do
        pure ()
data Exception'Type
    = Exception'Type'failed
    | Exception'Type'overloaded
    | Exception'Type'disconnected
    | Exception'Type'unimplemented
    | Exception'Type'unknown' (Word16)
    deriving(Show, Read, Eq)

instance C'.Decerialize Capnp.ById.Xb312981b2552a250.Exception'Type Exception'Type where
    decerialize raw = do
        case raw of
            Capnp.ById.Xb312981b2552a250.Exception'Type'failed -> pure Exception'Type'failed
            Capnp.ById.Xb312981b2552a250.Exception'Type'overloaded -> pure Exception'Type'overloaded
            Capnp.ById.Xb312981b2552a250.Exception'Type'disconnected -> pure Exception'Type'disconnected
            Capnp.ById.Xb312981b2552a250.Exception'Type'unimplemented -> pure Exception'Type'unimplemented
            Capnp.ById.Xb312981b2552a250.Exception'Type'unknown' val -> Exception'Type'unknown' <$> C'.decerialize val

data PromisedAnswer'Op
    = PromisedAnswer'Op'noop
    | PromisedAnswer'Op'getPointerField (Word16)
    | PromisedAnswer'Op'unknown' (Word16)
    deriving(Show, Read, Eq)

instance C'.Decerialize (Capnp.ById.Xb312981b2552a250.PromisedAnswer'Op M'.ConstMsg) PromisedAnswer'Op where
    decerialize raw = do
        raw <- Capnp.ById.Xb312981b2552a250.get_PromisedAnswer'Op' raw
        case raw of
            Capnp.ById.Xb312981b2552a250.PromisedAnswer'Op'noop -> pure PromisedAnswer'Op'noop
            Capnp.ById.Xb312981b2552a250.PromisedAnswer'Op'getPointerField val -> PromisedAnswer'Op'getPointerField <$> C'.decerialize val
            Capnp.ById.Xb312981b2552a250.PromisedAnswer'Op'unknown' val -> PromisedAnswer'Op'unknown' <$> C'.decerialize val

instance C'.IsStruct M'.ConstMsg PromisedAnswer'Op where
    fromStruct struct = do
        raw <- C'.fromStruct struct
        C'.decerialize (raw :: Capnp.ById.Xb312981b2552a250.PromisedAnswer'Op M'.ConstMsg)

instance C'.Cerialize s PromisedAnswer'Op (Capnp.ById.Xb312981b2552a250.PromisedAnswer'Op (M'.MutMsg s)) where
    marshalInto raw value = do
        pure ()
data Resolve'
    = Resolve'cap (CapDescriptor)
    | Resolve'exception (Exception)
    | Resolve'unknown' (Word16)
    deriving(Show, Read, Eq)

instance C'.Decerialize (Capnp.ById.Xb312981b2552a250.Resolve' M'.ConstMsg) Resolve' where
    decerialize raw = do
        raw <- Capnp.ById.Xb312981b2552a250.get_Resolve'' raw
        case raw of
            Capnp.ById.Xb312981b2552a250.Resolve'cap val -> Resolve'cap <$> C'.decerialize val
            Capnp.ById.Xb312981b2552a250.Resolve'exception val -> Resolve'exception <$> C'.decerialize val
            Capnp.ById.Xb312981b2552a250.Resolve'unknown' val -> Resolve'unknown' <$> C'.decerialize val

instance C'.IsStruct M'.ConstMsg Resolve' where
    fromStruct struct = do
        raw <- C'.fromStruct struct
        C'.decerialize (raw :: Capnp.ById.Xb312981b2552a250.Resolve' M'.ConstMsg)

instance C'.Cerialize s Resolve' (Capnp.ById.Xb312981b2552a250.Resolve' (M'.MutMsg s)) where
    marshalInto raw value = do
        pure ()
data Return'
    = Return'results (Payload)
    | Return'exception (Exception)
    | Return'canceled
    | Return'resultsSentElsewhere
    | Return'takeFromOtherQuestion (Word32)
    | Return'acceptFromThirdParty (Maybe (PU'.PtrType))
    | Return'unknown' (Word16)
    deriving(Show, Read, Eq)

instance C'.Decerialize (Capnp.ById.Xb312981b2552a250.Return' M'.ConstMsg) Return' where
    decerialize raw = do
        raw <- Capnp.ById.Xb312981b2552a250.get_Return'' raw
        case raw of
            Capnp.ById.Xb312981b2552a250.Return'results val -> Return'results <$> C'.decerialize val
            Capnp.ById.Xb312981b2552a250.Return'exception val -> Return'exception <$> C'.decerialize val
            Capnp.ById.Xb312981b2552a250.Return'canceled -> pure Return'canceled
            Capnp.ById.Xb312981b2552a250.Return'resultsSentElsewhere -> pure Return'resultsSentElsewhere
            Capnp.ById.Xb312981b2552a250.Return'takeFromOtherQuestion val -> Return'takeFromOtherQuestion <$> C'.decerialize val
            Capnp.ById.Xb312981b2552a250.Return'acceptFromThirdParty val -> Return'acceptFromThirdParty <$> C'.decerialize val
            Capnp.ById.Xb312981b2552a250.Return'unknown' val -> Return'unknown' <$> C'.decerialize val

instance C'.IsStruct M'.ConstMsg Return' where
    fromStruct struct = do
        raw <- C'.fromStruct struct
        C'.decerialize (raw :: Capnp.ById.Xb312981b2552a250.Return' M'.ConstMsg)

instance C'.Cerialize s Return' (Capnp.ById.Xb312981b2552a250.Return' (M'.MutMsg s)) where
    marshalInto raw value = do
        pure ()
