{-# OPTIONS_GHC -Wno-unused-imports #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE KindSignatures #-}
module Data.Capnp.ById.X8ef99297a43a5e34 where

-- Code generated by capnpc-haskell. DO NOT EDIT.
-- Generated from schema file: /usr/include/capnp/json.capnp

import Data.Int
import Data.Word
import qualified Data.Bits

import qualified Codec.Capnp
import qualified Data.Capnp.BuiltinTypes
import qualified Data.Capnp.TraversalLimit
import qualified Data.Capnp.Untyped

import qualified Data.Capnp.ById.Xbdf87d7bb8304e81

data JsonValue (m :: * -> *) b
    = JsonValue'null
    | JsonValue'boolean Bool
    | JsonValue'number Double
    | JsonValue'string (Data.Capnp.BuiltinTypes.Text b)
    | JsonValue'array (Data.Capnp.Untyped.ListOf m b (JsonValue m b))
    | JsonValue'object (Data.Capnp.Untyped.ListOf m b (JsonValue'Field m b))
    | JsonValue'call (JsonValue'Call m b)
    | JsonValue'unknown' Word16








instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsPtr m (JsonValue m b) b where
    fromPtr = undefined -- TODO: define fromPtr for sums.
newtype JsonValue'Call (m :: * -> *) b = JsonValue'Call (Data.Capnp.Untyped.Struct m b)

get_JsonValue'Call'function :: Data.Capnp.Untyped.ReadCtx m b => JsonValue'Call m b -> m (Data.Capnp.BuiltinTypes.Text b)
get_JsonValue'Call'function (JsonValue'Call struct) =
    Data.Capnp.Untyped.getPtr 0 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

get_JsonValue'Call'params :: Data.Capnp.Untyped.ReadCtx m b => JsonValue'Call m b -> m (Data.Capnp.Untyped.ListOf m b (JsonValue m b))
get_JsonValue'Call'params (JsonValue'Call struct) =
    Data.Capnp.Untyped.getPtr 1 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsPtr m (JsonValue'Call m b) b where
    fromPtr msg ptr = fmap JsonValue'Call (Codec.Capnp.fromPtr msg ptr)

newtype JsonValue'Field (m :: * -> *) b = JsonValue'Field (Data.Capnp.Untyped.Struct m b)

get_JsonValue'Field'name :: Data.Capnp.Untyped.ReadCtx m b => JsonValue'Field m b -> m (Data.Capnp.BuiltinTypes.Text b)
get_JsonValue'Field'name (JsonValue'Field struct) =
    Data.Capnp.Untyped.getPtr 0 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

get_JsonValue'Field'value :: Data.Capnp.Untyped.ReadCtx m b => JsonValue'Field m b -> m (JsonValue m b)
get_JsonValue'Field'value (JsonValue'Field struct) =
    Data.Capnp.Untyped.getPtr 1 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsPtr m (JsonValue'Field m b) b where
    fromPtr msg ptr = fmap JsonValue'Field (Codec.Capnp.fromPtr msg ptr)
