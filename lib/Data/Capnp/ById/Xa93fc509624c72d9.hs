{-# OPTIONS_GHC -Wno-unused-imports #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE KindSignatures #-}
module Data.Capnp.ById.Xa93fc509624c72d9 where

-- Code generated by capnpc-haskell. DO NOT EDIT.
-- Generated from schema file: /usr/include/capnp/schema.capnp

import Data.Int
import Data.Word
import qualified Data.Bits

import qualified Codec.Capnp
import qualified Data.Capnp.BuiltinTypes
import qualified Data.Capnp.TraversalLimit
import qualified Data.Capnp.Untyped

import qualified Data.Capnp.ById.Xbdf87d7bb8304e81

data Type'anyPointer'unconstrained (m :: * -> *) b
    = Type'anyPointer'unconstrained'anyKind
    | Type'anyPointer'unconstrained'struct
    | Type'anyPointer'unconstrained'list
    | Type'anyPointer'unconstrained'capability
    | Type'anyPointer'unconstrained'unknown' Word16





instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsStruct m (Type'anyPointer'unconstrained m b) b where
    fromStruct struct = do
        tag <-  Codec.Capnp.getWordField struct 1 16 0
        pure $ case tag of
            3 -> Type'anyPointer'unconstrained'capability
            2 -> Type'anyPointer'unconstrained'list
            1 -> Type'anyPointer'unconstrained'struct
            0 -> Type'anyPointer'unconstrained'anyKind
            _ -> Type'anyPointer'unconstrained'unknown' tag

newtype Brand (m :: * -> *) b = Brand (Data.Capnp.Untyped.Struct m b)

instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsStruct m (Brand m b) b where
    fromStruct = pure . Brand
get_Brand'scopes :: Data.Capnp.Untyped.ReadCtx m b => Brand m b -> m (Data.Capnp.Untyped.ListOf m b (Brand'Scope m b))
get_Brand'scopes (Brand struct) =
    Data.Capnp.Untyped.getPtr 0 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

newtype Method (m :: * -> *) b = Method (Data.Capnp.Untyped.Struct m b)

instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsStruct m (Method m b) b where
    fromStruct = pure . Method
get_Method'name :: Data.Capnp.Untyped.ReadCtx m b => Method m b -> m (Data.Capnp.BuiltinTypes.Text b)
get_Method'name (Method struct) =
    Data.Capnp.Untyped.getPtr 0 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

get_Method'codeOrder :: Data.Capnp.Untyped.ReadCtx m b => Method m b -> m Word16
get_Method'codeOrder (Method struct) = Codec.Capnp.getWordField struct 0 0 0
get_Method'paramStructType :: Data.Capnp.Untyped.ReadCtx m b => Method m b -> m Word64
get_Method'paramStructType (Method struct) = Codec.Capnp.getWordField struct 1 0 0
get_Method'resultStructType :: Data.Capnp.Untyped.ReadCtx m b => Method m b -> m Word64
get_Method'resultStructType (Method struct) = Codec.Capnp.getWordField struct 2 0 0
get_Method'annotations :: Data.Capnp.Untyped.ReadCtx m b => Method m b -> m (Data.Capnp.Untyped.ListOf m b (Annotation m b))
get_Method'annotations (Method struct) =
    Data.Capnp.Untyped.getPtr 1 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

get_Method'paramBrand :: Data.Capnp.Untyped.ReadCtx m b => Method m b -> m (Brand m b)
get_Method'paramBrand (Method struct) =
    Data.Capnp.Untyped.getPtr 2 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

get_Method'resultBrand :: Data.Capnp.Untyped.ReadCtx m b => Method m b -> m (Brand m b)
get_Method'resultBrand (Method struct) =
    Data.Capnp.Untyped.getPtr 3 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

get_Method'implicitParameters :: Data.Capnp.Untyped.ReadCtx m b => Method m b -> m (Data.Capnp.Untyped.ListOf m b (Node'Parameter m b))
get_Method'implicitParameters (Method struct) =
    Data.Capnp.Untyped.getPtr 4 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

newtype Enumerant (m :: * -> *) b = Enumerant (Data.Capnp.Untyped.Struct m b)

instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsStruct m (Enumerant m b) b where
    fromStruct = pure . Enumerant
get_Enumerant'name :: Data.Capnp.Untyped.ReadCtx m b => Enumerant m b -> m (Data.Capnp.BuiltinTypes.Text b)
get_Enumerant'name (Enumerant struct) =
    Data.Capnp.Untyped.getPtr 0 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

get_Enumerant'codeOrder :: Data.Capnp.Untyped.ReadCtx m b => Enumerant m b -> m Word16
get_Enumerant'codeOrder (Enumerant struct) = Codec.Capnp.getWordField struct 0 0 0
get_Enumerant'annotations :: Data.Capnp.Untyped.ReadCtx m b => Enumerant m b -> m (Data.Capnp.Untyped.ListOf m b (Annotation m b))
get_Enumerant'annotations (Enumerant struct) =
    Data.Capnp.Untyped.getPtr 1 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

newtype Field (m :: * -> *) b = Field (Data.Capnp.Untyped.Struct m b)

instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsStruct m (Field m b) b where
    fromStruct = pure . Field
get_Field''name :: Data.Capnp.Untyped.ReadCtx m b => Field m b -> m (Data.Capnp.BuiltinTypes.Text b)
get_Field''name (Field struct) =
    Data.Capnp.Untyped.getPtr 0 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

get_Field''codeOrder :: Data.Capnp.Untyped.ReadCtx m b => Field m b -> m Word16
get_Field''codeOrder (Field struct) = Codec.Capnp.getWordField struct 0 0 0
get_Field''annotations :: Data.Capnp.Untyped.ReadCtx m b => Field m b -> m (Data.Capnp.Untyped.ListOf m b (Annotation m b))
get_Field''annotations (Field struct) =
    Data.Capnp.Untyped.getPtr 1 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

get_Field''discriminantValue :: Data.Capnp.Untyped.ReadCtx m b => Field m b -> m Word16
get_Field''discriminantValue (Field struct) = Codec.Capnp.getWordField struct 0 16 65535
get_Field''ordinal :: Data.Capnp.Untyped.ReadCtx m b => Field m b -> m (Field'ordinal m b)
get_Field''ordinal (Field struct) = Codec.Capnp.fromStruct struct
get_Field''union' :: Data.Capnp.Untyped.ReadCtx m b => Field m b -> m (Field' m b)
get_Field''union' (Field struct) = Codec.Capnp.fromStruct struct
data Field' (m :: * -> *) b
    = Field'slot (Field'slot'group' m b)
    | Field'group (Field'group'group' m b)
    | Field'unknown' Word16
newtype Field'slot'group' (m :: * -> *) b = Field'slot'group' (Data.Capnp.Untyped.Struct m b)

instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsStruct m (Field'slot'group' m b) b where
    fromStruct = pure . Field'slot'group'
get_Field'slot'offset :: Data.Capnp.Untyped.ReadCtx m b => Field'slot'group' m b -> m Word32
get_Field'slot'offset (Field'slot'group' struct) = Codec.Capnp.getWordField struct 0 32 0
get_Field'slot'type_ :: Data.Capnp.Untyped.ReadCtx m b => Field'slot'group' m b -> m (Type m b)
get_Field'slot'type_ (Field'slot'group' struct) =
    Data.Capnp.Untyped.getPtr 2 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

get_Field'slot'defaultValue :: Data.Capnp.Untyped.ReadCtx m b => Field'slot'group' m b -> m (Value m b)
get_Field'slot'defaultValue (Field'slot'group' struct) =
    Data.Capnp.Untyped.getPtr 3 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

get_Field'slot'hadExplicitDefault :: Data.Capnp.Untyped.ReadCtx m b => Field'slot'group' m b -> m Bool
get_Field'slot'hadExplicitDefault (Field'slot'group' struct) = Codec.Capnp.getWordField struct 2 0 0
newtype Field'group'group' (m :: * -> *) b = Field'group'group' (Data.Capnp.Untyped.Struct m b)

instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsStruct m (Field'group'group' m b) b where
    fromStruct = pure . Field'group'group'
get_Field'group'typeId :: Data.Capnp.Untyped.ReadCtx m b => Field'group'group' m b -> m Word64
get_Field'group'typeId (Field'group'group' struct) = Codec.Capnp.getWordField struct 2 0 0

instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsStruct m (Field' m b) b where
    fromStruct struct = do
        tag <-  Codec.Capnp.getWordField struct 1 0 0
        pure $ case tag of
            1 -> Field'group struct
            0 -> Field'slot struct
            _ -> Field'unknown' tag

newtype Superclass (m :: * -> *) b = Superclass (Data.Capnp.Untyped.Struct m b)

instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsStruct m (Superclass m b) b where
    fromStruct = pure . Superclass
get_Superclass'id :: Data.Capnp.Untyped.ReadCtx m b => Superclass m b -> m Word64
get_Superclass'id (Superclass struct) = Codec.Capnp.getWordField struct 0 0 0
get_Superclass'brand :: Data.Capnp.Untyped.ReadCtx m b => Superclass m b -> m (Brand m b)
get_Superclass'brand (Superclass struct) =
    Data.Capnp.Untyped.getPtr 0 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

newtype Brand'Scope (m :: * -> *) b = Brand'Scope (Data.Capnp.Untyped.Struct m b)

instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsStruct m (Brand'Scope m b) b where
    fromStruct = pure . Brand'Scope
get_Brand'Scope''scopeId :: Data.Capnp.Untyped.ReadCtx m b => Brand'Scope m b -> m Word64
get_Brand'Scope''scopeId (Brand'Scope struct) = Codec.Capnp.getWordField struct 0 0 0
get_Brand'Scope''union' :: Data.Capnp.Untyped.ReadCtx m b => Brand'Scope m b -> m (Brand'Scope' m b)
get_Brand'Scope''union' (Brand'Scope struct) = Codec.Capnp.fromStruct struct
data Brand'Scope' (m :: * -> *) b
    = Brand'Scope'bind (Data.Capnp.Untyped.ListOf m b (Brand'Binding m b))
    | Brand'Scope'inherit
    | Brand'Scope'unknown' Word16



instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsStruct m (Brand'Scope' m b) b where
    fromStruct struct = do
        tag <-  Codec.Capnp.getWordField struct 1 0 0
        pure $ case tag of
            1 -> Brand'Scope'inherit
            0 -> Brand'Scope'bind undefined -- TODO
            _ -> Brand'Scope'unknown' tag

newtype CodeGeneratorRequest'RequestedFile'Import (m :: * -> *) b = CodeGeneratorRequest'RequestedFile'Import (Data.Capnp.Untyped.Struct m b)

instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsStruct m (CodeGeneratorRequest'RequestedFile'Import m b) b where
    fromStruct = pure . CodeGeneratorRequest'RequestedFile'Import
get_CodeGeneratorRequest'RequestedFile'Import'id :: Data.Capnp.Untyped.ReadCtx m b => CodeGeneratorRequest'RequestedFile'Import m b -> m Word64
get_CodeGeneratorRequest'RequestedFile'Import'id (CodeGeneratorRequest'RequestedFile'Import struct) = Codec.Capnp.getWordField struct 0 0 0
get_CodeGeneratorRequest'RequestedFile'Import'name :: Data.Capnp.Untyped.ReadCtx m b => CodeGeneratorRequest'RequestedFile'Import m b -> m (Data.Capnp.BuiltinTypes.Text b)
get_CodeGeneratorRequest'RequestedFile'Import'name (CodeGeneratorRequest'RequestedFile'Import struct) =
    Data.Capnp.Untyped.getPtr 0 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

newtype Node'Parameter (m :: * -> *) b = Node'Parameter (Data.Capnp.Untyped.Struct m b)

instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsStruct m (Node'Parameter m b) b where
    fromStruct = pure . Node'Parameter
get_Node'Parameter'name :: Data.Capnp.Untyped.ReadCtx m b => Node'Parameter m b -> m (Data.Capnp.BuiltinTypes.Text b)
get_Node'Parameter'name (Node'Parameter struct) =
    Data.Capnp.Untyped.getPtr 0 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

data Field'ordinal (m :: * -> *) b
    = Field'ordinal'implicit
    | Field'ordinal'explicit Word16
    | Field'ordinal'unknown' Word16



instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsStruct m (Field'ordinal m b) b where
    fromStruct struct = do
        tag <-  Codec.Capnp.getWordField struct 1 16 0
        pure $ case tag of
            1 -> Field'ordinal'explicit undefined -- TODO
            0 -> Field'ordinal'implicit
            _ -> Field'ordinal'unknown' tag

newtype CodeGeneratorRequest (m :: * -> *) b = CodeGeneratorRequest (Data.Capnp.Untyped.Struct m b)

instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsStruct m (CodeGeneratorRequest m b) b where
    fromStruct = pure . CodeGeneratorRequest
get_CodeGeneratorRequest'nodes :: Data.Capnp.Untyped.ReadCtx m b => CodeGeneratorRequest m b -> m (Data.Capnp.Untyped.ListOf m b (Node m b))
get_CodeGeneratorRequest'nodes (CodeGeneratorRequest struct) =
    Data.Capnp.Untyped.getPtr 0 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

get_CodeGeneratorRequest'requestedFiles :: Data.Capnp.Untyped.ReadCtx m b => CodeGeneratorRequest m b -> m (Data.Capnp.Untyped.ListOf m b (CodeGeneratorRequest'RequestedFile m b))
get_CodeGeneratorRequest'requestedFiles (CodeGeneratorRequest struct) =
    Data.Capnp.Untyped.getPtr 1 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

get_CodeGeneratorRequest'capnpVersion :: Data.Capnp.Untyped.ReadCtx m b => CodeGeneratorRequest m b -> m (CapnpVersion m b)
get_CodeGeneratorRequest'capnpVersion (CodeGeneratorRequest struct) =
    Data.Capnp.Untyped.getPtr 2 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

data Type'anyPointer (m :: * -> *) b
    = Type'anyPointer'unconstrained (Type'anyPointer'unconstrained'group' m b)
    | Type'anyPointer'parameter (Type'anyPointer'parameter'group' m b)
    | Type'anyPointer'implicitMethodParameter (Type'anyPointer'implicitMethodParameter'group' m b)
    | Type'anyPointer'unknown' Word16
newtype Type'anyPointer'unconstrained'group' (m :: * -> *) b = Type'anyPointer'unconstrained'group' (Data.Capnp.Untyped.Struct m b)

instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsStruct m (Type'anyPointer'unconstrained'group' m b) b where
    fromStruct = pure . Type'anyPointer'unconstrained'group'
get_Type'anyPointer'unconstrained'union' :: Data.Capnp.Untyped.ReadCtx m b => Type'anyPointer'unconstrained'group' m b -> m (Type'anyPointer'unconstrained m b)
get_Type'anyPointer'unconstrained'union' (Type'anyPointer'unconstrained'group' struct) = Codec.Capnp.fromStruct struct
newtype Type'anyPointer'parameter'group' (m :: * -> *) b = Type'anyPointer'parameter'group' (Data.Capnp.Untyped.Struct m b)

instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsStruct m (Type'anyPointer'parameter'group' m b) b where
    fromStruct = pure . Type'anyPointer'parameter'group'
get_Type'anyPointer'parameter'scopeId :: Data.Capnp.Untyped.ReadCtx m b => Type'anyPointer'parameter'group' m b -> m Word64
get_Type'anyPointer'parameter'scopeId (Type'anyPointer'parameter'group' struct) = Codec.Capnp.getWordField struct 2 0 0
get_Type'anyPointer'parameter'parameterIndex :: Data.Capnp.Untyped.ReadCtx m b => Type'anyPointer'parameter'group' m b -> m Word16
get_Type'anyPointer'parameter'parameterIndex (Type'anyPointer'parameter'group' struct) = Codec.Capnp.getWordField struct 1 16 0
newtype Type'anyPointer'implicitMethodParameter'group' (m :: * -> *) b = Type'anyPointer'implicitMethodParameter'group' (Data.Capnp.Untyped.Struct m b)

instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsStruct m (Type'anyPointer'implicitMethodParameter'group' m b) b where
    fromStruct = pure . Type'anyPointer'implicitMethodParameter'group'
get_Type'anyPointer'implicitMethodParameter'parameterIndex :: Data.Capnp.Untyped.ReadCtx m b => Type'anyPointer'implicitMethodParameter'group' m b -> m Word16
get_Type'anyPointer'implicitMethodParameter'parameterIndex (Type'anyPointer'implicitMethodParameter'group' struct) = Codec.Capnp.getWordField struct 1 16 0

instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsStruct m (Type'anyPointer m b) b where
    fromStruct struct = do
        tag <-  Codec.Capnp.getWordField struct 1 0 0
        pure $ case tag of
            2 -> Type'anyPointer'implicitMethodParameter struct
            1 -> Type'anyPointer'parameter struct
            0 -> Type'anyPointer'unconstrained struct
            _ -> Type'anyPointer'unknown' tag

data Brand'Binding (m :: * -> *) b
    = Brand'Binding'unbound
    | Brand'Binding'type_ (Type m b)
    | Brand'Binding'unknown' Word16



instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsStruct m (Brand'Binding m b) b where
    fromStruct struct = do
        tag <-  Codec.Capnp.getWordField struct 0 0 0
        pure $ case tag of
            1 -> Brand'Binding'type_ undefined -- TODO
            0 -> Brand'Binding'unbound
            _ -> Brand'Binding'unknown' tag

data Value (m :: * -> *) b
    = Value'void
    | Value'bool Bool
    | Value'int8 Int8
    | Value'int16 Int16
    | Value'int32 Int32
    | Value'int64 Int64
    | Value'uint8 Word8
    | Value'uint16 Word16
    | Value'uint32 Word32
    | Value'uint64 Word64
    | Value'float32 Float
    | Value'float64 Double
    | Value'text (Data.Capnp.BuiltinTypes.Text b)
    | Value'data_ (Data.Capnp.BuiltinTypes.Data b)
    | Value'list (Maybe (Data.Capnp.Untyped.Ptr m b))
    | Value'enum Word16
    | Value'struct (Maybe (Data.Capnp.Untyped.Ptr m b))
    | Value'interface
    | Value'anyPointer (Maybe (Data.Capnp.Untyped.Ptr m b))
    | Value'unknown' Word16




















instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsStruct m (Value m b) b where
    fromStruct struct = do
        tag <-  Codec.Capnp.getWordField struct 0 0 0
        pure $ case tag of
            18 -> Value'anyPointer undefined -- TODO
            17 -> Value'interface
            16 -> Value'struct undefined -- TODO
            15 -> Value'enum undefined -- TODO
            14 -> Value'list undefined -- TODO
            13 -> Value'data_ undefined -- TODO
            12 -> Value'text undefined -- TODO
            11 -> Value'float64 undefined -- TODO
            10 -> Value'float32 undefined -- TODO
            9 -> Value'uint64 undefined -- TODO
            8 -> Value'uint32 undefined -- TODO
            7 -> Value'uint16 undefined -- TODO
            6 -> Value'uint8 undefined -- TODO
            5 -> Value'int64 undefined -- TODO
            4 -> Value'int32 undefined -- TODO
            3 -> Value'int16 undefined -- TODO
            2 -> Value'int8 undefined -- TODO
            1 -> Value'bool undefined -- TODO
            0 -> Value'void
            _ -> Value'unknown' tag

newtype CodeGeneratorRequest'RequestedFile (m :: * -> *) b = CodeGeneratorRequest'RequestedFile (Data.Capnp.Untyped.Struct m b)

instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsStruct m (CodeGeneratorRequest'RequestedFile m b) b where
    fromStruct = pure . CodeGeneratorRequest'RequestedFile
get_CodeGeneratorRequest'RequestedFile'id :: Data.Capnp.Untyped.ReadCtx m b => CodeGeneratorRequest'RequestedFile m b -> m Word64
get_CodeGeneratorRequest'RequestedFile'id (CodeGeneratorRequest'RequestedFile struct) = Codec.Capnp.getWordField struct 0 0 0
get_CodeGeneratorRequest'RequestedFile'filename :: Data.Capnp.Untyped.ReadCtx m b => CodeGeneratorRequest'RequestedFile m b -> m (Data.Capnp.BuiltinTypes.Text b)
get_CodeGeneratorRequest'RequestedFile'filename (CodeGeneratorRequest'RequestedFile struct) =
    Data.Capnp.Untyped.getPtr 0 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

get_CodeGeneratorRequest'RequestedFile'imports :: Data.Capnp.Untyped.ReadCtx m b => CodeGeneratorRequest'RequestedFile m b -> m (Data.Capnp.Untyped.ListOf m b (CodeGeneratorRequest'RequestedFile'Import m b))
get_CodeGeneratorRequest'RequestedFile'imports (CodeGeneratorRequest'RequestedFile struct) =
    Data.Capnp.Untyped.getPtr 1 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

data Type (m :: * -> *) b
    = Type'void
    | Type'bool
    | Type'int8
    | Type'int16
    | Type'int32
    | Type'int64
    | Type'uint8
    | Type'uint16
    | Type'uint32
    | Type'uint64
    | Type'float32
    | Type'float64
    | Type'text
    | Type'data_
    | Type'list (Type'list'group' m b)
    | Type'enum (Type'enum'group' m b)
    | Type'struct (Type'struct'group' m b)
    | Type'interface (Type'interface'group' m b)
    | Type'anyPointer (Type'anyPointer'group' m b)
    | Type'unknown' Word16














newtype Type'list'group' (m :: * -> *) b = Type'list'group' (Data.Capnp.Untyped.Struct m b)

instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsStruct m (Type'list'group' m b) b where
    fromStruct = pure . Type'list'group'
get_Type'list'elementType :: Data.Capnp.Untyped.ReadCtx m b => Type'list'group' m b -> m (Type m b)
get_Type'list'elementType (Type'list'group' struct) =
    Data.Capnp.Untyped.getPtr 0 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

newtype Type'enum'group' (m :: * -> *) b = Type'enum'group' (Data.Capnp.Untyped.Struct m b)

instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsStruct m (Type'enum'group' m b) b where
    fromStruct = pure . Type'enum'group'
get_Type'enum'typeId :: Data.Capnp.Untyped.ReadCtx m b => Type'enum'group' m b -> m Word64
get_Type'enum'typeId (Type'enum'group' struct) = Codec.Capnp.getWordField struct 1 0 0
get_Type'enum'brand :: Data.Capnp.Untyped.ReadCtx m b => Type'enum'group' m b -> m (Brand m b)
get_Type'enum'brand (Type'enum'group' struct) =
    Data.Capnp.Untyped.getPtr 0 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

newtype Type'struct'group' (m :: * -> *) b = Type'struct'group' (Data.Capnp.Untyped.Struct m b)

instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsStruct m (Type'struct'group' m b) b where
    fromStruct = pure . Type'struct'group'
get_Type'struct'typeId :: Data.Capnp.Untyped.ReadCtx m b => Type'struct'group' m b -> m Word64
get_Type'struct'typeId (Type'struct'group' struct) = Codec.Capnp.getWordField struct 1 0 0
get_Type'struct'brand :: Data.Capnp.Untyped.ReadCtx m b => Type'struct'group' m b -> m (Brand m b)
get_Type'struct'brand (Type'struct'group' struct) =
    Data.Capnp.Untyped.getPtr 0 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

newtype Type'interface'group' (m :: * -> *) b = Type'interface'group' (Data.Capnp.Untyped.Struct m b)

instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsStruct m (Type'interface'group' m b) b where
    fromStruct = pure . Type'interface'group'
get_Type'interface'typeId :: Data.Capnp.Untyped.ReadCtx m b => Type'interface'group' m b -> m Word64
get_Type'interface'typeId (Type'interface'group' struct) = Codec.Capnp.getWordField struct 1 0 0
get_Type'interface'brand :: Data.Capnp.Untyped.ReadCtx m b => Type'interface'group' m b -> m (Brand m b)
get_Type'interface'brand (Type'interface'group' struct) =
    Data.Capnp.Untyped.getPtr 0 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

newtype Type'anyPointer'group' (m :: * -> *) b = Type'anyPointer'group' (Data.Capnp.Untyped.Struct m b)

instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsStruct m (Type'anyPointer'group' m b) b where
    fromStruct = pure . Type'anyPointer'group'
get_Type'anyPointer'union' :: Data.Capnp.Untyped.ReadCtx m b => Type'anyPointer'group' m b -> m (Type'anyPointer m b)
get_Type'anyPointer'union' (Type'anyPointer'group' struct) = Codec.Capnp.fromStruct struct

instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsStruct m (Type m b) b where
    fromStruct struct = do
        tag <-  Codec.Capnp.getWordField struct 0 0 0
        pure $ case tag of
            18 -> Type'anyPointer struct
            17 -> Type'interface struct
            16 -> Type'struct struct
            15 -> Type'enum struct
            14 -> Type'list struct
            13 -> Type'data_
            12 -> Type'text
            11 -> Type'float64
            10 -> Type'float32
            9 -> Type'uint64
            8 -> Type'uint32
            7 -> Type'uint16
            6 -> Type'uint8
            5 -> Type'int64
            4 -> Type'int32
            3 -> Type'int16
            2 -> Type'int8
            1 -> Type'bool
            0 -> Type'void
            _ -> Type'unknown' tag

data ElementSize (m :: * -> *) b
    = ElementSize'empty
    | ElementSize'bit
    | ElementSize'byte
    | ElementSize'twoBytes
    | ElementSize'fourBytes
    | ElementSize'eightBytes
    | ElementSize'pointer
    | ElementSize'inlineComposite
    | ElementSize'unknown' Word16
instance Enum (ElementSize m b) where
    toEnum = Codec.Capnp.fromWord . fromIntegral
    fromEnum = fromIntegral . Codec.Capnp.toWord


instance Codec.Capnp.IsWord (ElementSize m b) where
    fromWord 7 = ElementSize'inlineComposite
    fromWord 6 = ElementSize'pointer
    fromWord 5 = ElementSize'eightBytes
    fromWord 4 = ElementSize'fourBytes
    fromWord 3 = ElementSize'twoBytes
    fromWord 2 = ElementSize'byte
    fromWord 1 = ElementSize'bit
    fromWord 0 = ElementSize'empty
    fromWord tag = ElementSize'unknown' (fromIntegral tag)
    toWord ElementSize'inlineComposite = 7
    toWord ElementSize'pointer = 6
    toWord ElementSize'eightBytes = 5
    toWord ElementSize'fourBytes = 4
    toWord ElementSize'twoBytes = 3
    toWord ElementSize'byte = 2
    toWord ElementSize'bit = 1
    toWord ElementSize'empty = 0
    toWord (ElementSize'unknown' tag) = fromIntegral tag
instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsPtr m (Data.Capnp.Untyped.ListOf m b (ElementSize m b)) b where
    fromPtr msg ptr = fmap
       (fmap (toEnum . (fromIntegral :: Word16 -> Int)))
       (Codec.Capnp.fromPtr msg ptr)

newtype CapnpVersion (m :: * -> *) b = CapnpVersion (Data.Capnp.Untyped.Struct m b)

instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsStruct m (CapnpVersion m b) b where
    fromStruct = pure . CapnpVersion
get_CapnpVersion'major :: Data.Capnp.Untyped.ReadCtx m b => CapnpVersion m b -> m Word16
get_CapnpVersion'major (CapnpVersion struct) = Codec.Capnp.getWordField struct 0 0 0
get_CapnpVersion'minor :: Data.Capnp.Untyped.ReadCtx m b => CapnpVersion m b -> m Word8
get_CapnpVersion'minor (CapnpVersion struct) = Codec.Capnp.getWordField struct 0 16 0
get_CapnpVersion'micro :: Data.Capnp.Untyped.ReadCtx m b => CapnpVersion m b -> m Word8
get_CapnpVersion'micro (CapnpVersion struct) = Codec.Capnp.getWordField struct 0 24 0
newtype Node'NestedNode (m :: * -> *) b = Node'NestedNode (Data.Capnp.Untyped.Struct m b)

instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsStruct m (Node'NestedNode m b) b where
    fromStruct = pure . Node'NestedNode
get_Node'NestedNode'name :: Data.Capnp.Untyped.ReadCtx m b => Node'NestedNode m b -> m (Data.Capnp.BuiltinTypes.Text b)
get_Node'NestedNode'name (Node'NestedNode struct) =
    Data.Capnp.Untyped.getPtr 0 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

get_Node'NestedNode'id :: Data.Capnp.Untyped.ReadCtx m b => Node'NestedNode m b -> m Word64
get_Node'NestedNode'id (Node'NestedNode struct) = Codec.Capnp.getWordField struct 0 0 0
newtype Node (m :: * -> *) b = Node (Data.Capnp.Untyped.Struct m b)

instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsStruct m (Node m b) b where
    fromStruct = pure . Node
get_Node''id :: Data.Capnp.Untyped.ReadCtx m b => Node m b -> m Word64
get_Node''id (Node struct) = Codec.Capnp.getWordField struct 0 0 0
get_Node''displayName :: Data.Capnp.Untyped.ReadCtx m b => Node m b -> m (Data.Capnp.BuiltinTypes.Text b)
get_Node''displayName (Node struct) =
    Data.Capnp.Untyped.getPtr 0 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

get_Node''displayNamePrefixLength :: Data.Capnp.Untyped.ReadCtx m b => Node m b -> m Word32
get_Node''displayNamePrefixLength (Node struct) = Codec.Capnp.getWordField struct 1 0 0
get_Node''scopeId :: Data.Capnp.Untyped.ReadCtx m b => Node m b -> m Word64
get_Node''scopeId (Node struct) = Codec.Capnp.getWordField struct 2 0 0
get_Node''nestedNodes :: Data.Capnp.Untyped.ReadCtx m b => Node m b -> m (Data.Capnp.Untyped.ListOf m b (Node'NestedNode m b))
get_Node''nestedNodes (Node struct) =
    Data.Capnp.Untyped.getPtr 1 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

get_Node''annotations :: Data.Capnp.Untyped.ReadCtx m b => Node m b -> m (Data.Capnp.Untyped.ListOf m b (Annotation m b))
get_Node''annotations (Node struct) =
    Data.Capnp.Untyped.getPtr 2 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

get_Node''parameters :: Data.Capnp.Untyped.ReadCtx m b => Node m b -> m (Data.Capnp.Untyped.ListOf m b (Node'Parameter m b))
get_Node''parameters (Node struct) =
    Data.Capnp.Untyped.getPtr 5 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

get_Node''isGeneric :: Data.Capnp.Untyped.ReadCtx m b => Node m b -> m Bool
get_Node''isGeneric (Node struct) = Codec.Capnp.getWordField struct 4 32 0
get_Node''union' :: Data.Capnp.Untyped.ReadCtx m b => Node m b -> m (Node' m b)
get_Node''union' (Node struct) = Codec.Capnp.fromStruct struct
data Node' (m :: * -> *) b
    = Node'file
    | Node'struct (Node'struct'group' m b)
    | Node'enum (Node'enum'group' m b)
    | Node'interface (Node'interface'group' m b)
    | Node'const (Node'const'group' m b)
    | Node'annotation (Node'annotation'group' m b)
    | Node'unknown' Word16

newtype Node'struct'group' (m :: * -> *) b = Node'struct'group' (Data.Capnp.Untyped.Struct m b)

instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsStruct m (Node'struct'group' m b) b where
    fromStruct = pure . Node'struct'group'
get_Node'struct'dataWordCount :: Data.Capnp.Untyped.ReadCtx m b => Node'struct'group' m b -> m Word16
get_Node'struct'dataWordCount (Node'struct'group' struct) = Codec.Capnp.getWordField struct 1 48 0
get_Node'struct'pointerCount :: Data.Capnp.Untyped.ReadCtx m b => Node'struct'group' m b -> m Word16
get_Node'struct'pointerCount (Node'struct'group' struct) = Codec.Capnp.getWordField struct 3 0 0
get_Node'struct'preferredListEncoding :: Data.Capnp.Untyped.ReadCtx m b => Node'struct'group' m b -> m (ElementSize m b)
get_Node'struct'preferredListEncoding (Node'struct'group' struct) = Codec.Capnp.getWordField struct 3 16 0
get_Node'struct'isGroup :: Data.Capnp.Untyped.ReadCtx m b => Node'struct'group' m b -> m Bool
get_Node'struct'isGroup (Node'struct'group' struct) = Codec.Capnp.getWordField struct 3 32 0
get_Node'struct'discriminantCount :: Data.Capnp.Untyped.ReadCtx m b => Node'struct'group' m b -> m Word16
get_Node'struct'discriminantCount (Node'struct'group' struct) = Codec.Capnp.getWordField struct 3 48 0
get_Node'struct'discriminantOffset :: Data.Capnp.Untyped.ReadCtx m b => Node'struct'group' m b -> m Word32
get_Node'struct'discriminantOffset (Node'struct'group' struct) = Codec.Capnp.getWordField struct 4 0 0
get_Node'struct'fields :: Data.Capnp.Untyped.ReadCtx m b => Node'struct'group' m b -> m (Data.Capnp.Untyped.ListOf m b (Field m b))
get_Node'struct'fields (Node'struct'group' struct) =
    Data.Capnp.Untyped.getPtr 3 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

newtype Node'enum'group' (m :: * -> *) b = Node'enum'group' (Data.Capnp.Untyped.Struct m b)

instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsStruct m (Node'enum'group' m b) b where
    fromStruct = pure . Node'enum'group'
get_Node'enum'enumerants :: Data.Capnp.Untyped.ReadCtx m b => Node'enum'group' m b -> m (Data.Capnp.Untyped.ListOf m b (Enumerant m b))
get_Node'enum'enumerants (Node'enum'group' struct) =
    Data.Capnp.Untyped.getPtr 3 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

newtype Node'interface'group' (m :: * -> *) b = Node'interface'group' (Data.Capnp.Untyped.Struct m b)

instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsStruct m (Node'interface'group' m b) b where
    fromStruct = pure . Node'interface'group'
get_Node'interface'methods :: Data.Capnp.Untyped.ReadCtx m b => Node'interface'group' m b -> m (Data.Capnp.Untyped.ListOf m b (Method m b))
get_Node'interface'methods (Node'interface'group' struct) =
    Data.Capnp.Untyped.getPtr 3 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

get_Node'interface'superclasses :: Data.Capnp.Untyped.ReadCtx m b => Node'interface'group' m b -> m (Data.Capnp.Untyped.ListOf m b (Superclass m b))
get_Node'interface'superclasses (Node'interface'group' struct) =
    Data.Capnp.Untyped.getPtr 4 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

newtype Node'const'group' (m :: * -> *) b = Node'const'group' (Data.Capnp.Untyped.Struct m b)

instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsStruct m (Node'const'group' m b) b where
    fromStruct = pure . Node'const'group'
get_Node'const'type_ :: Data.Capnp.Untyped.ReadCtx m b => Node'const'group' m b -> m (Type m b)
get_Node'const'type_ (Node'const'group' struct) =
    Data.Capnp.Untyped.getPtr 3 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

get_Node'const'value :: Data.Capnp.Untyped.ReadCtx m b => Node'const'group' m b -> m (Value m b)
get_Node'const'value (Node'const'group' struct) =
    Data.Capnp.Untyped.getPtr 4 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

newtype Node'annotation'group' (m :: * -> *) b = Node'annotation'group' (Data.Capnp.Untyped.Struct m b)

instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsStruct m (Node'annotation'group' m b) b where
    fromStruct = pure . Node'annotation'group'
get_Node'annotation'type_ :: Data.Capnp.Untyped.ReadCtx m b => Node'annotation'group' m b -> m (Type m b)
get_Node'annotation'type_ (Node'annotation'group' struct) =
    Data.Capnp.Untyped.getPtr 3 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

get_Node'annotation'targetsFile :: Data.Capnp.Untyped.ReadCtx m b => Node'annotation'group' m b -> m Bool
get_Node'annotation'targetsFile (Node'annotation'group' struct) = Codec.Capnp.getWordField struct 1 48 0
get_Node'annotation'targetsConst :: Data.Capnp.Untyped.ReadCtx m b => Node'annotation'group' m b -> m Bool
get_Node'annotation'targetsConst (Node'annotation'group' struct) = Codec.Capnp.getWordField struct 1 49 0
get_Node'annotation'targetsEnum :: Data.Capnp.Untyped.ReadCtx m b => Node'annotation'group' m b -> m Bool
get_Node'annotation'targetsEnum (Node'annotation'group' struct) = Codec.Capnp.getWordField struct 1 50 0
get_Node'annotation'targetsEnumerant :: Data.Capnp.Untyped.ReadCtx m b => Node'annotation'group' m b -> m Bool
get_Node'annotation'targetsEnumerant (Node'annotation'group' struct) = Codec.Capnp.getWordField struct 1 51 0
get_Node'annotation'targetsStruct :: Data.Capnp.Untyped.ReadCtx m b => Node'annotation'group' m b -> m Bool
get_Node'annotation'targetsStruct (Node'annotation'group' struct) = Codec.Capnp.getWordField struct 1 52 0
get_Node'annotation'targetsField :: Data.Capnp.Untyped.ReadCtx m b => Node'annotation'group' m b -> m Bool
get_Node'annotation'targetsField (Node'annotation'group' struct) = Codec.Capnp.getWordField struct 1 53 0
get_Node'annotation'targetsUnion :: Data.Capnp.Untyped.ReadCtx m b => Node'annotation'group' m b -> m Bool
get_Node'annotation'targetsUnion (Node'annotation'group' struct) = Codec.Capnp.getWordField struct 1 54 0
get_Node'annotation'targetsGroup :: Data.Capnp.Untyped.ReadCtx m b => Node'annotation'group' m b -> m Bool
get_Node'annotation'targetsGroup (Node'annotation'group' struct) = Codec.Capnp.getWordField struct 1 55 0
get_Node'annotation'targetsInterface :: Data.Capnp.Untyped.ReadCtx m b => Node'annotation'group' m b -> m Bool
get_Node'annotation'targetsInterface (Node'annotation'group' struct) = Codec.Capnp.getWordField struct 1 56 0
get_Node'annotation'targetsMethod :: Data.Capnp.Untyped.ReadCtx m b => Node'annotation'group' m b -> m Bool
get_Node'annotation'targetsMethod (Node'annotation'group' struct) = Codec.Capnp.getWordField struct 1 57 0
get_Node'annotation'targetsParam :: Data.Capnp.Untyped.ReadCtx m b => Node'annotation'group' m b -> m Bool
get_Node'annotation'targetsParam (Node'annotation'group' struct) = Codec.Capnp.getWordField struct 1 58 0
get_Node'annotation'targetsAnnotation :: Data.Capnp.Untyped.ReadCtx m b => Node'annotation'group' m b -> m Bool
get_Node'annotation'targetsAnnotation (Node'annotation'group' struct) = Codec.Capnp.getWordField struct 1 59 0

instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsStruct m (Node' m b) b where
    fromStruct struct = do
        tag <-  Codec.Capnp.getWordField struct 1 32 0
        pure $ case tag of
            5 -> Node'annotation struct
            4 -> Node'const struct
            3 -> Node'interface struct
            2 -> Node'enum struct
            1 -> Node'struct struct
            0 -> Node'file
            _ -> Node'unknown' tag

newtype Annotation (m :: * -> *) b = Annotation (Data.Capnp.Untyped.Struct m b)

instance Data.Capnp.Untyped.ReadCtx m b => Codec.Capnp.IsStruct m (Annotation m b) b where
    fromStruct = pure . Annotation
get_Annotation'id :: Data.Capnp.Untyped.ReadCtx m b => Annotation m b -> m Word64
get_Annotation'id (Annotation struct) = Codec.Capnp.getWordField struct 0 0 0
get_Annotation'value :: Data.Capnp.Untyped.ReadCtx m b => Annotation m b -> m (Value m b)
get_Annotation'value (Annotation struct) =
    Data.Capnp.Untyped.getPtr 0 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)

get_Annotation'brand :: Data.Capnp.Untyped.ReadCtx m b => Annotation m b -> m (Brand m b)
get_Annotation'brand (Annotation struct) =
    Data.Capnp.Untyped.getPtr 1 struct
    >>= Codec.Capnp.fromPtr (Data.Capnp.Untyped.message struct)
